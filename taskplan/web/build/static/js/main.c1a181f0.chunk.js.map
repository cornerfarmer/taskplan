{"version":3,"sources":["Global.js","JsonEditor.js","ConfigEditor.js","Prompt.js","Task.js","Scheduler.js","View.js","ReassuringPrompt.js","Choice.js","PresetGroup.js","Preset.js","PausedTask.js","FinishedTask.js","PresetEditor.js","ChoiceEditor.js","PresetFilter.js","Option.js","TaskEditor.js","TaskView.js","PresetBatchEditor.js","PresetTab.js","TaskViewer.js","PresetViewer.js","TaskTab.js","Project.js","CodeVersionViewer.js","ProjectManager.js","FlashMessageManager.js","ControlBar.js","Repository.js","App.js","index.js"],"names":["Date","prototype","toShortStr","pad","n","parseInt","this","getDate","getMonth","getHours","getMinutes","State","INIT","QUEUED","RUNNING","STOPPED","stringify","require","Node","originalUpdateDom","updateDom","options","call","tdRevert","dom","tr","fieldEditable","type","document","createElement","tdValue","parentNode","appendChild","icon","className","button","onclick","editor","onRevert","path","getPath","field","value","JSONEditor","VALID_OPTIONS","push","console","log","JsonEditor","mode","updateEditor","jsoneditor","expandAll","node","pathExistsInJson","props","inheritedJson","json","getMode","currentJson","get","onChange","err","newJson","updateFromJsonEditor","cloneDeep","currentBlock","prevBlocks","i","length","isEmpty","modes","ace","history","enableSort","enableTransform","mainMenuBar","statusBar","container","readOnly","aceEditor","setReadOnly","oldJson","editorJson","prop","Array","isArray","Object","keys","concat","isEqual","setValueAtPath","setText","space","mergedJson","merge","destroy","ref","elem","React","Component","ConfigEditor","state","config","inheritedConfig","loadedUrl","dataJsonString","jsonEditor","createRef","bind","prevProps","prevState","url","JSON","bases","reload","setState","current","dataJson","data","FormData","append","fetch","method","body","then","res","result","undefined","onDynamicChange","error","preview","Prompt","dialogOpen","inputValue","defaultValue","device","configEditor","start","openDialog","closeDialog","updateInputValue","onKeyDown","onDeviceChange","presetEditor","devices","event","target","uuid","evt","e","keyCode","preventDefault","header","text","autoFocus","onFocus","select","name","presetEditorUrl","map","onClick","TaskName","wrapperRef","$","find","tooltip","task","is_test","nameChoices","choicePreset","choice_name","replace","key","data-toggle","data-placement","data-original-title","TaskStatus","renderTime","time","run_time","total_time","index","TaskProgress","style","width","mean_iteration_time","Math","min","start_time","iteration_update_time","finished_iterations","total_iterations","TaskToolbar","pause","saveNow","cancel","runNow","openExtraDialog","openPresetDialog","promptExtraRefs","promptPresetRefs","openLog","clone","terminate","window","open","currentAction","is_pausing","is_saving","title","aria-haspopup","aria-expanded","Task","projectName","onMouseDown","onDragStart","onDragOver","onDragEnter","onDragLeave","onDrop","taskRef","dragEnterCounter","contains","dataTransfer","setData","getData","draggable","project_name","start_time_timestamp","highlightTask","try","Scheduler","tasks","max_running","evtSource","addEventListener","parse","openMaxRunningDialogRefs","updateTasks","openMaxRunningDialog","connectDevice","pm","timerID","setInterval","slice","filter","forEach","refreshRunTime","repository","clearInterval","removeOnChange","values","id","Fragment","is_connected","sort","a","b","queue_index","now","children","parent","parentKey","child","newParent","setChild","getFirstTaskIn","getAllContainedTasks","RootNode","PresetNode","preset","CodeVersionNode","TasksNode","View","includeCodeVersion","root","taskByUuid","presets","presetsByUuid","sorting","localeCompare","sortedPresets","presetCompare","findIndex","x","removePreset","addPreset","Error","insert_index","splice","addNodeWithPreset","firstTask","formerChoiceKey","getChoiceKeyToPreset","tasksWithDifferentChoice","newNode","addPresetBeforeNode","removeTask","addTask","includes","indexOf","removeNodesWithPreset","removeSubtree","remove","branching_options","branching_option","nodeExists","deprecated_choice","version","formerKey","insertTask","keyInDict","dict","checkNodeForRemoval","insertAsParent","suitableChoice","args","choices","choice","getChoiceToPreset","getKeyToChoice","secondTask","creation_time","targetKey","compTasks","unshift","selectedChoices","codeVersion","suitableKey","ReassuringPrompt","execute","Choice","reassuringRemovePromptRefs","abstract","base","editFunc","removable","PresetGroup","hideChoices","toggleHideChoices","group","editPresetFunc","editChoiceFunc","newChoiceFunc","numberOfTasksPerChoice","Preset","presetRef","sortMode","stopPropagation","PausedTask","itemRef","finish","snapshot","highlight","scrollIntoView","behavior","block","classname","itemClass","saved_time","had_error","showTask","rerunTask","filterLikeTask","PresetEditor","deprecatedChoice","defaultChoice","close","save","new","onNameChange","onDeprecatedChoiceChange","onDefaultChoiceChange","closeEditors","default_choice","required","ChoiceEditor","dynamic","forceDynamic","possible_base_choices","uuid_to_load","onBaseChange","onAbstractChange","onIsBaseDynamic","onTemplateChange","duplicate","base_uuid","template","isTemplate","checked","isDynamic","disabled","PresetFilter","mapChoiceToChoices","calcChoiceName","classes","resolvedName","numbersPerArg","presetsByGroup","useTemplateFields","calcChoiceClasses","onSelectionChange","split","max","numberOfTasks","TaskEditor","save_interval","checkpoint_interval","command","commandHint","isTest","run","onTotalIterationsChange","onCheckpointIntervalChange","onSaveIntervalChange","copyCommand","onIsTestChange","commandInput","assign","updateCommand","arg","execCommand","tasksPerChoice","choiceUuid","hasOwnProperty","shift","PresetBatchEditor","PresetTab","showAbstract","toggleShowAbstract","addPresetBatch","presetBatchEditor","choiceEditor","project","active","presetSortingMode","sortingDescending","defaultChecked","TaskViewer","notes","extractCheckpoint","notesTextarea","updateNotes","timer","newValue","task_uuid","clearTimeout","setTimeout","class","codeVersions","checkpoints","checkpoint","PresetViewer","presetFilterEnabled","togglePresetFilter","TaskTab","newTask","taskEditor","selectedTasks","s","preset_name","highlightedTask","Project","activeTab","updatePresets","showTab","onChangeSorting","switchSortingDirection","openPresetViewer","togglePresetSortingMode","filterView","presetViewerRef","onAdd","onRemove","removeOnAdd","removeOnRemove","updateVisibleTasks","getSelectedTask","current_code_version","updateTask","tab","closeViewer","visible","display","CodeVersionViewer","newName","onNewNameChange","addCodeVersion","selectCodeVersion","code_version","tree","code_version_uuid","found","findCodeVersionInTree","child_index","codeVersionTree","selectedNode","currentCodeVersion","choicesToSelected","entry","selectBranch","total_children","ProjectManager","projects","codeVersionTrees","currentProject","gotoTB","addVersion","updateProjects","addCodeVersions","openTaskViewer","openCodeVersionViewer","promptRefs","codeVersionViewerRef","taskViewerRef","insertCodeVersionNode","updateCodeVersionNode","tensorboard_port","location","hostname","deltaIndex","project_id","changeProject","FlashMessage","marginLeft","marginTop","flashMessage","level","message","short","FlashMessageManager","flashMessages","flashMessagesRefs","nextId","fm","newFlashMessage","flashMessageRef","nextState","messageIndex","noConnection","ControlBar","openGlobalLog","pauseAll","Repository","onChangeListeners","onAddListeners","onRemoveListeners","changedProject","updateEntity","changedCodeVersion","changedPreset","changedChoice","previousIndex","changedTask","removeEntity","standardView","updateTaskNames","getNodeChoicePath","entities","newEntity","entityType","isNew","throwOnAddEvent","throwOnChangeEvent","entityToRemove","entity","throwOnRemoveEvent","entitiesClone","listener","listenerIndex","App","ReconnectingEventSource","projectManagerRef","refreshConnectionState","onerror","onopen","readyState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c1a181f0.chunk.js","sourcesContent":["\nvar State = {\n    INIT: 0,\n    QUEUED: 1,\n    RUNNING: 2,\n    STOPPED: 3\n};\n\nDate.prototype.toShortStr = function() {\n    function pad(n) {\n        n = parseInt(n);\n        return (n < 10) ? (\"0\" + n) : n;\n    }\n    return this.getDate() + \".\" + (this.getMonth() + 1) + \" - \" + pad(this.getHours()) + \":\" + pad(this.getMinutes());\n};\n\nexport default State;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash/cloneDeep';\nimport merge from 'lodash/merge';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport JSONEditor from 'jsoneditor';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nvar stringify = require('json-stable-stringify');\n\nvar Node = require('jsoneditor/src/js/Node');\n\nvar originalUpdateDom = Node.prototype.updateDom;\nNode.prototype.updateDom = function (options) {\n    originalUpdateDom.call(this, options);\n    var tdRevert = this.dom.tdRevert;\n    if (!tdRevert && this.dom && this.dom.tr && this.fieldEditable && (this.type === \"auto\" || this.type === \"array\" || this.type === \"string\")) {\n        tdRevert = document.createElement('td');\n        this.dom.tdRevert = tdRevert;\n        this.dom.tdValue.parentNode.appendChild(tdRevert);\n\n        var icon = document.createElement('i');\n        icon.type = 'i';\n        icon.className = 'fas fa-undo-alt';\n\n        var button = document.createElement('div');\n        button.type = 'div';\n        button.className = 'revert';\n        button.onclick = () => {\n            this.editor.options.onRevert({path: this.getPath(), field: this.field, value: this.value})\n        };\n        button.appendChild(icon);\n\n\n        tdRevert.appendChild(button);\n    }\n\n};\n\nJSONEditor.VALID_OPTIONS.push('onRevert');\nconsole.log(Node);\n\n\nclass JsonEditor extends React.Component {\n    componentDidMount() {\n        const options = {};\n        options.onModeChange = (mode) => {\n            this.updateEditor();\n            if (mode === \"tree\")\n                this.jsoneditor.expandAll();\n        };\n        options.onClassName = (node) => {\n\n            if (this.pathExistsInJson(node.path, this.props.inheritedJson) && !this.pathExistsInJson(node.path, this.props.json)) {\n                return 'inherited-value';\n            } else if (!this.pathExistsInJson(node.path, this.props.inheritedJson) && this.pathExistsInJson(node.path, this.props.json)) {\n                return 'new-value';\n            }\n\n            return undefined;\n        };\n        options.onEditable = (node) => {\n\n            if (this.pathExistsInJson(node.path, this.props.inheritedJson) ) {\n                return {\"field\": false, \"value\": true};\n            } else {\n                return {\"field\": true, \"value\": true};\n            }\n\n        };\n        options.onChange = () => {\n            if (this.jsoneditor.getMode() === \"code\") {\n                try {\n                    const currentJson = this.jsoneditor.get();\n                    if (this.props.json !== currentJson) {\n                        this.props.onChange(currentJson);\n                    }\n                } catch (err) {\n                    this.err = err;\n                }\n            }\n        };\n        options.onChangeJSON = (json) => {\n            if (this.jsoneditor.getMode() === \"tree\") {\n                var newJson = {};\n                this.updateFromJsonEditor(newJson, this.props.json, this.props.inheritedJson, json, []);\n                this.props.onChange(newJson);\n                console.log(newJson);\n            }\n        };\n        options.onRevert = (node) => {\n            var newJson = cloneDeep(this.props.json);\n            var currentBlock = newJson;\n            var prevBlocks = [newJson];\n\n            for (var i = 0; i < node.path.length; i++) {\n                if (i === node.path.length - 1) {\n                    delete currentBlock[node.path[i]];\n                } else {\n                    currentBlock = currentBlock[node.path[i]];\n                    prevBlocks.push(currentBlock)\n                }\n            }\n\n            for (var i = node.path.length - 2; i >= 0; i--) {\n                if (isEmpty(prevBlocks[i][node.path[i]])) {\n                    delete prevBlocks[i][node.path[i]];\n                } else {\n                    break;\n                }\n            }\n\n            this.props.onChange(newJson);\n            this.updateEditor();\n        };\n        options.mode = 'mode' in this.props.options ? this.props.options.mode : 'tree';\n        options.modes = 'modes' in this.props.options ? this.props.options.modes : ['code', 'tree'];\n        options.ace = ace;\n        options.history = false;\n        options.enableSort = false;\n        options.enableTransform = false;\n        options.mainMenuBar = 'mainMenuBar' in this.props.options ? this.props.options.mainMenuBar : true;\n        options.statusBar = 'statusBar' in this.props.options ? this.props.options.statusBar : true;\n\n        this.jsoneditor = new JSONEditor(this.container, options);\n\n        if ('readOnly' in this.props.options && this.props.options.readOnly) {\n            this.jsoneditor.aceEditor.setReadOnly(true);\n        }\n\n        if ('json' in this.props) {\n            this.updateEditor();\n            if (options.mode === 'tree')\n                this.jsoneditor.expandAll();\n        }\n    }\n\n    updateFromJsonEditor(newJson, oldJson, inheritedJson, editorJson, path) {\n        for (var prop in editorJson) {\n            if (typeof editorJson[prop] === \"object\" && !Array.isArray(editorJson[prop]) && Object.keys(editorJson[prop]).length > 0) {\n                this.updateFromJsonEditor(\n                    newJson,\n                    prop in oldJson ? oldJson[prop] : {},\n                    prop in inheritedJson ? inheritedJson[prop] : {},\n                    editorJson[prop],\n                    path.concat([prop])\n                );\n            } else {\n                if ((prop in inheritedJson && !isEqual(inheritedJson[prop], editorJson[prop])) || !(prop in inheritedJson) || prop in oldJson) {\n                    this.setValueAtPath(newJson, path.concat([prop]), editorJson[prop]);\n                }\n            }\n        }\n    }\n\n    pathExistsInJson(path, json) {\n        if (!path) {\n            return false;\n        }\n\n        var currentBlock = json;\n        for (var i = 0; i < path.length; i++) {\n            if (i === path.length - 1) {\n                return path[i] in currentBlock;\n            } else {\n                if (!(path[i] in currentBlock)) {\n                    return false;\n                }\n                currentBlock = currentBlock[path[i]];\n            }\n        }\n        return false;\n    }\n\n    setValueAtPath(json, path, value) {\n        var currentBlock = json;\n        for (var i = 0; i < path.length; i++) {\n            if (i === path.length - 1) {\n                currentBlock[path[i]] = value;\n            } else {\n                if (!(path[i] in currentBlock)) {\n                    currentBlock[path[i]] = {};\n                }\n                currentBlock = currentBlock[path[i]];\n            }\n        }\n    }\n\n    componentDidUpdate() {\n    }\n\n    updateEditor() {\n        if (this.jsoneditor.getMode() === \"code\") {\n            this.jsoneditor.setText(stringify(this.props.json, { space: '  ' }));\n        } else {\n            var mergedJson = cloneDeep(this.props.inheritedJson);\n            merge(mergedJson, this.props.json);\n            this.jsoneditor.setText(stringify(mergedJson, { space: '  ' }));\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.jsoneditor) {\n            this.jsoneditor.destroy();\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"jsoneditor-react-container\" + ('readOnly' in this.props.options && this.props.options.readOnly ? ' jsoneditor-readOnly' : '')} ref={elem => this.container = elem}/>\n        );\n    }\n}\n\nexport default JsonEditor;","import React from 'react';\nimport Prompt from \"./Prompt\";\nimport JsonEditor from './JsonEditor';\n\nclass ConfigEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            config: {},\n            inheritedConfig: {},\n            loadedUrl: null,\n            dataJsonString: ''\n        };\n\n        this.jsonEditor = React.createRef();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.url !== this.props.url || JSON.stringify(prevProps.bases) !== JSON.stringify(this.props.bases))\n            this.reload();\n    }\n\n    componentDidMount() {\n        this.setState({\n            loadedUrl: null\n        });\n        this.reload();\n    }\n\n    reload() {\n        if (this.props.url === \"\") {\n\n            if (this.state.loadedUrl !== this.props.url) {\n                this.setState({\n                    config: {},\n                    inheritedConfig: {},\n                    loadedUrl: this.props.url\n                });\n                if (this.jsonEditor.current !== null)\n                    this.jsonEditor.current.updateEditor();\n            }\n        } else {\n            var dataJson = {};\n            dataJson['bases'] = this.props.bases;\n            let dataJsonString = JSON.stringify(dataJson);\n            if (this.state.loadedUrl !== this.props.url || this.state.dataJsonString !== dataJsonString) {\n                var data = new FormData();\n\n                data.append(\"data\", dataJsonString);\n\n                fetch(this.props.url,\n                    {\n                        method: \"POST\",\n                        body: data\n                    })\n                    .then(res => res.json())\n                    .then(\n                        (result) => {\n                            this.setState({\n                                inheritedConfig: result['inherited_config'],\n                                config: result['config'] !== null ? result['config'] : this.state.config,\n                                loadedUrl: this.props.url,\n                                dataJsonString: dataJsonString\n                            });\n                            this.jsonEditor.current.updateEditor();\n\n                            if (this.props.onDynamicChange !== undefined)\n                                this.props.onDynamicChange(result['dynamic'])\n                        },\n                        (error) => {\n\n                        }\n                    )\n            }\n        }\n    }\n\n    onChange(data) {\n        this.setState({\n            config: data\n        });\n    }\n\n    render() {\n        if (this.state.loadedUrl === this.props.url)\n            return (\n                <JsonEditor ref={this.jsonEditor} json={this.state.config} inheritedJson={this.state.inheritedConfig} onChange={this.onChange} options={this.props.preview ? {mode: 'code', modes: ['code'], readOnly: true, mainMenuBar: false, statusBar: false} : {}} />\n            );\n        else\n            return (\n                <div className=\"editor-loading\"><i className=\"fas fa-sync fa-spin fa-2x\"></i></div>\n            )\n    }\n}\n\nexport default ConfigEditor;","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\n\nclass Prompt extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dialogOpen: false,\n            inputValue: this.props.defaultValue,\n            device: null\n        };\n\n        this.configEditor = React.createRef();\n        this.start = this.start.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onDeviceChange = this.onDeviceChange.bind(this);\n    }\n\n    start() {\n        this.setState({\n            dialogOpen: false\n        });\n        if (this.props.presetEditor) {\n            var data = new FormData();\n            data.append(\"data\", JSON.stringify(this.configEditor.current.state.config));\n\n            fetch(this.props.url,\n            {\n                method: \"POST\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n        } else {\n            fetch(this.props.url + (this.props.devices ? \"/\" + this.state.device : \"\") + \"/\" + this.state.inputValue)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n\n                    },\n                    (error) => {\n\n                    }\n                )\n        }\n    }\n\n    onDeviceChange(event) {\n        this.setState({\n            device: event.target.value\n        });\n    }\n\n    openDialog() {\n        this.setState({\n            dialogOpen: true,\n            device: (this.props.devices ? this.props.devices[0].uuid : null)\n        });\n    }\n\n    closeDialog() {\n        this.setState({\n            dialogOpen: false\n        });\n    }\n\n    updateInputValue(evt) {\n        this.setState({\n            inputValue: evt.target.value\n        });\n    }\n\n    onKeyDown(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.start();\n        }\n        if (e.keyCode === 27) {\n            e.preventDefault();\n            this.closeDialog();\n        }\n    }\n\n    onChange(data) {\n        this.setState({\n            inputValue: data\n        });\n    }\n\n    render() {\n        if (this.state.dialogOpen) {\n            return (\n                <div className=\"prompt-wrapper\">\n                    <div className= {this.props.presetEditor ? 'prompt preset-prompt' : 'prompt'}>\n                        <div className=\"prompt-header\">{this.props.header}</div>\n                        <div className=\"prompt-text\">{this.props.text}</div>\n                        {!this.props.presetEditor &&\n                            <input autoFocus onFocus={(e) => {e.target.select()}} type=\"text\" name=\"iterations\" value={this.state.inputValue} onChange={evt => this.updateInputValue(evt)} onKeyDown={this.onKeyDown} />\n                        }\n                        {this.props.presetEditor &&\n                            <ConfigEditor ref={this.configEditor} url={this.props.presetEditorUrl} />\n                        }\n                        {this.props.devices &&\n                            <select value={this.state.device} onChange={this.onDeviceChange}>\n                                {this.props.devices.map(device => (\n                                    <option value={device.uuid}>{device.name}</option>\n                                ))}\n                            </select>\n                        }\n                        <div className=\"buttons\">\n                            <div onClick={this.start}>Ok</div>\n                            <div onClick={this.closeDialog}>Cancel</div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default Prompt;","import React from 'react';\nimport State from \"./Global\";\nimport Prompt from \"./Prompt\";\nimport $ from 'jquery';\n\nexport class TaskName extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.wrapperRef = React.createRef();\n    }\n\n    componentDidMount() {\n        $(this.wrapperRef.current).find('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    componentDidUpdate() {\n        $(this.wrapperRef.current).find('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n\n    render() {\n        if (this.props.task.is_test) {\n            return (\n                <span ref={this.wrapperRef}>Test</span>\n            );\n        } else {\n            if (this.props.task.nameChoices.length > 0) {\n                return (\n                    <span ref={this.wrapperRef}>\n                {this.props.task.nameChoices.map((choicePreset, i) => {\n                    let choice_name = choicePreset[1].name;\n                    for (let i = 2; i < choicePreset.length; i++)\n                        choice_name = choice_name.replace(\"$T\" + (i - 2) + \"$\", choicePreset[i]);\n\n                    return (\n                        <span key={i}>\n                        {i !== 0 &&\n                        <span className=\"separator\">/</span>\n                        }\n                            <span data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title={choicePreset[0].name + \": \" + choice_name}>{choice_name}</span>\n                    </span>\n                    )\n                })}\n            </span>\n                );\n            } else {\n                return (\n                    <span ref={this.wrapperRef}>Default config</span>\n                );\n            }\n        }\n    }\n}\n\n\nfunction TaskStatus(props) {\n    if (props.state === State.RUNNING) {\n        function pad(n) {\n            n = parseInt(n);\n            return (n < 10) ? (\"0\" + n) : n;\n        }\n\n        function renderTime(time) {\n            if (time > 0) {\n                if (time >= 3600)\n                    return pad(time / 3600) + \":\" + pad((time % 3600) / 60) + \":\" + pad(time % 60);\n                else\n                    return pad(time / 60) + \":\" + pad(time % 60);\n            } else\n                return \"--:--\";\n        }\n\n        return <div className=\"time\">{renderTime(props.run_time)} / {renderTime(props.total_time)}</div>;\n    } else {\n        return <div className=\"time\">{props.index + 1}</div>\n    }\n}\n\nfunction TaskProgress(props) {\n    if (props.state === State.RUNNING) {\n        var style = {width: (props.mean_iteration_time > 0 ? Math.min(1, ((props.run_time + props.start_time - props.iteration_update_time) / props.mean_iteration_time + props.finished_iterations) / props.total_iterations) * 100 : 0) + '%'};\n        return <div className=\"progress\" style={style}></div>;\n    } else {\n        return \"\";\n    }\n}\n\nclass TaskToolbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.pause = this.pause.bind(this);\n        this.saveNow = this.saveNow.bind(this);\n        this.cancel = this.cancel.bind(this);\n        this.runNow = this.runNow.bind(this);\n        this.openExtraDialog = this.openExtraDialog.bind(this);\n        this.openPresetDialog = this.openPresetDialog.bind(this);\n        this.promptExtraRefs = React.createRef();\n        this.promptPresetRefs = React.createRef();\n        this.openLog = this.openLog.bind(this);\n        this.clone = this.clone.bind(this);\n        this.terminate = this.terminate.bind(this);\n    }\n\n    pause() {\n        fetch(\"/pause/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    saveNow() {\n        fetch(\"/save_now/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    cancel() {\n        fetch(\"/cancel/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    runNow() {\n        fetch(\"/run_now/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    openExtraDialog() {\n        this.promptExtraRefs.current.openDialog();\n    }\n\n    openPresetDialog() {\n        this.promptPresetRefs.current.openDialog();\n    }\n\n    openLog() {\n        window.open(\"/log/\" + this.props.task.uuid, '_blank');\n    }\n\n     clone() {\n        fetch(\"/clone_task/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    terminate() {\n        fetch(\"/terminate/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    render() {\n        let currentAction = \"\";\n        if (this.props.task.is_pausing) {\n            currentAction = \"pausing...\"\n        } else if (this.props.task.is_saving) {\n            currentAction = \"saving...\"\n        }\n        return (\n            <div className=\"toolbar\">\n                {this.props.task.state === State.RUNNING &&\n                    <span>\n                        <div className=\"action\" onClick={this.pause} title=\"Pause the task after the current iteration\">\n                            <i className=\"fa fa-pause\"></i><span>Pause</span>\n                        </div>\n                        < div className=\"action\" onClick={this.saveNow} title=\"Force the task to save after the current iteration\">\n                            <i className=\"fas fa-save\"></i><span>Save now!</span>\n                        </div>\n                        < div className=\"action\" onClick={this.openExtraDialog} title=\"Change the scheduled number of total iterations\">\n                            <i className=\"fa fa-edit\"></i><span>Change</span>\n                        </div>\n                        <div className=\"dropdown\">\n                            <div className=\"action dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\n                                <i className=\"fas fa-ellipsis-v\"></i>\n                            </div>\n                            <div className=\"dropdown-menu\">\n                                <div className=\"action\" onClick={this.openLog} title=\"View the log\">\n                                    <i className=\"far fa-file-alt\"></i><span>Log</span>\n                                </div>\n                                < div className=\"action\" onClick={this.openPresetDialog} title=\"Adjust the configuration on the fly\">\n                                    <i className=\"fas fa-code\"></i><span>Config</span>\n                                </div>\n                                <div className=\"action\" onClick={this.clone} title=\"Clone task\">\n                                    <i className=\"far fa-copy\"></i><span>Clone</span>\n                                </div>\n                                <div className=\"action\" onClick={this.terminate} title=\"Terminate task\">\n                                   <i className=\"fas fa-skull-crossbones\"></i><span>Terminate</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"current-action\">\n                            {currentAction}\n                        </div>\n                    </span>\n                }\n                {this.props.task.state === State.QUEUED &&\n                    <span>\n                        <div className=\"action\" onClick={this.runNow} title=\"Pause one of the running tasks and start this one instead\">\n                            <i className=\"fas fa-exclamation-triangle\"></i><span>Run now!</span>\n                        </div>\n                        < div className=\"action\" onClick={this.openExtraDialog} title=\"Change the scheduled number of total iterations\">\n                            <i className=\"fa fa-edit\"></i><span>Change</span>\n                        </div>\n                        < div className=\"action\" onClick={this.openPresetDialog} title=\"Adjust the configuration on the fly\">\n                            <i className=\"fas fa-code\"></i><span>Config</span>\n                        </div>\n                        <div className=\"dropdown\">\n                            <div className=\"action dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\n                                <i className=\"fas fa-ellipsis-v\"></i>\n                            </div>\n                            <div className=\"dropdown-menu\">\n                                <div className=\"action\" onClick={this.cancel} title=\"Remove this task from the queue\">\n                                    <i className=\"fas fa-times\"></i><span>Cancel</span>\n                                </div>\n                                <div className=\"action\" onClick={this.clone} title=\"Clone task\">\n                                    <i className=\"far fa-copy\"></i><span>Clone</span>\n                                </div>\n                            </div>\n                        </div>\n                    </span>\n                }\n                <Prompt ref={this.promptExtraRefs} defaultValue={this.props.task.total_iterations} header=\"Change total iterations?\" text=\"Specify the new number of iterations, you want the task to run:\" url={\"/change/\" + this.props.task.uuid}/>\n                <Prompt ref={this.promptPresetRefs} presetEditor={true} presetEditorUrl={\"/config/task_timestep/\" + this.props.task.uuid} header=\"Change config?\" text=\"Specify the new configuration which will be used on the fly:\" url={\"/adjust_task_preset/\" + this.props.task.uuid}/>\n            </div>\n        );\n    }\n}\n\nclass Task extends React.Component {\n    constructor(props) {\n        super(props);\n        this.projectName = React.createRef();\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.taskRef = React.createRef();\n        this.dragEnterCounter = 0\n    }\n\n    onMouseDown(e) {\n        this.target = e.target;\n    }\n\n    onDragStart(e) {\n        if (this.projectName.current.contains(this.target)) {\n            e.dataTransfer.setData(\"text/plain\", this.props.task.uuid);\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    onDragOver(e) {\n        if (this.props.task.state === State.QUEUED && this.props.task.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n        }\n    }\n\n    onDrop(e) {\n        if (this.props.task.state === State.QUEUED && this.props.task.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n            fetch(\"/reorder_task/\" + e.dataTransfer.getData(\"text/plain\") + \"/\" + this.props.index)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n\n            this.dragEnterCounter = 0;\n            this.taskRef.current.className = \"task\";\n        }\n    }\n\n    onDragEnter(e) {\n        if (this.props.task.state === State.QUEUED && this.props.task.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n            this.taskRef.current.className = \"task on-drag-over\";\n            this.dragEnterCounter++;\n        }\n    }\n\n    onDragLeave(e) {\n        if (this.props.task.state === State.QUEUED && this.props.task.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n            this.dragEnterCounter--;\n            if (this.dragEnterCounter === 0)\n                this.taskRef.current.className = \"task\";\n        }\n    }\n\n    render() {\n        return (\n            <li ref={this.taskRef} className=\"task\" onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDragEnter={this.onDragEnter} onDrop={this.onDrop} onDragStart={this.onDragStart} onMouseDown={this.onMouseDown} draggable={this.props.task.state === State.QUEUED ? \"true\" : \"false\"} >\n                <div className=\"content\">\n                    <div className=\"header\">\n                        <div className=\"project-name\" ref={this.projectName}>{this.props.task.project_name}</div>\n                        <div className=\"status\">\n                            <TaskStatus index={this.props.index} state={this.props.task.state} total_time={this.props.task.total_time} run_time={this.props.task.run_time}/>\n                            <div className=\"iterations\">{this.props.task.finished_iterations} / {this.props.task.total_iterations}</div>\n                        </div>\n                    </div>\n                    <TaskProgress state={this.props.task.state} total_iterations={this.props.task.total_iterations} run_time={this.props.task.run_time} start_time={this.props.task.start_time_timestamp} mean_iteration_time={this.props.task.mean_iteration_time} finished_iterations={this.props.task.finished_iterations} iteration_update_time={this.props.task.iteration_update_time}/>\n                    <div className=\"preset-name\" onClick={() => this.props.highlightTask(this.props.task)}><span className=\"try-number\">{this.props.task.try}</span><TaskName task={this.props.task}/></div>\n                </div>\n                <TaskToolbar task={this.props.task}/>\n            </li>\n        );\n    }\n}\n\nexport default Task;","import React from 'react';\nimport State from './Global'\nimport Task from './Task'\nimport Prompt from \"./Prompt\";\n\nclass Scheduler extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            max_running: 1\n        };\n\n        this.props.evtSource.addEventListener(\"SCHEDULER_OPTIONS\", (e) => {\n            const options = JSON.parse(e.data);\n            this.setState({\n                max_running: options.max_running\n            });\n        });\n\n        this.openMaxRunningDialogRefs = React.createRef();\n        this.updateTasks = this.updateTasks.bind(this);\n        this.openMaxRunningDialog = this.openMaxRunningDialog.bind(this);\n        this.connectDevice = this.connectDevice.bind(this);\n    }\n\n    static refreshRunTime(task) {\n        task.run_time = parseInt((Date.now() - task.start_time) / 1000);\n    }\n\n    componentDidMount() {\n        var pm = this;\n        this.timerID = setInterval(\n            function() {\n                const tasks = pm.state.tasks.slice();\n                tasks.filter(task => task.state === State.RUNNING).forEach(task => Scheduler.refreshRunTime(task));\n                pm.setState({\n                    tasks: tasks\n                });\n            },\n            1000\n        );\n        this.props.repository.onChange(\"tasks\", this.updateTasks);\n        this.updateTasks(this.props.repository.tasks);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n        this.props.repository.removeOnChange(\"tasks\", this.updateTasks);\n    }\n\n    updateTasks(tasks) {\n        this.setState({\n            tasks: Object.values(tasks).filter(task => task.state === State.RUNNING || task.state === State.QUEUED)\n        });\n    }\n\n    openMaxRunningDialog() {\n        this.openMaxRunningDialogRefs.current.openDialog();\n    }\n\n    connectDevice(device) {\n        fetch(\"/connect_device/\" + device.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                }\n            )\n    }\n\n    render() {\n        return (\n            <div id=\"scheduler\">\n                 {this.props.devices.map(device => (\n                    <React.Fragment>\n                        <h2>{device.name}{device.is_connected >= 0 && \" - \" + (device.is_connected === 1 ? \"Connected\" : \"Not connected\")}</h2>\n\n                        <h3>Running ({this.state.tasks.filter(task => task.state === State.RUNNING && task.device === device.uuid).length} / <span id=\"max-running-tasks\" title=\"Adjust the maximum number of parallel running tasks\" onClick={this.openMaxRunningDialog}>{this.state.max_running}</span>)</h3>\n                        <Prompt ref={this.openMaxRunningDialogRefs} defaultValue={this.state.max_running} header=\"Set maximum parallel tasks?\" text=\"Specify the new number of tasks which can run in parallel:\" url={\"/change_max_running\"}/>\n\n                        {device.is_connected === 0 &&\n                            <div onClick={() => this.connectDevice(device)}>Connect</div>\n                        }\n                        <ul className=\"tasks\" id=\"tasks-running\">\n                        {this.state.tasks.filter(task => task.state === State.RUNNING && task.device === device.uuid).map((task, index) => (\n                                <Task\n                                    key={task.uuid}\n                                    task={task}\n                                    index={index}\n                                    highlightTask={this.props.highlightTask}\n                                />\n                            ))\n                        }\n                        </ul>\n\n                        <h3>Waiting ({this.state.tasks.filter(task => task.state === State.QUEUED && task.device === device.uuid).length})</h3>\n                        <ul className=\"tasks\" id=\"tasks-queued\">\n                            {this.state.tasks.filter(task => task.state === State.QUEUED && task.device === device.uuid).sort(function(a,b) { return a.queue_index - b.queue_index }).map((task, index) => (\n                                <Task\n                                    key={task.uuid}\n                                    task={task}\n                                    index={index}\n                                    highlightTask={this.props.highlightTask}\n                                />\n                            ))}\n                        </ul>\n                    </React.Fragment>\n                ))}\n            </div>\n        );\n    }\n}\n\n\nexport default Scheduler;","class Node {\n    constructor() {\n        this.children = {};\n        this.parent = null;\n        this.parentKey = \"\";\n    }\n\n    setChild(key, child) {\n        this.children[key] = child;\n        child.parent = this;\n        child.parentKey = key;\n    }\n\n    insertAsParent(key, newParent) {\n        this.parent.setChild(this.parentKey, newParent);\n        newParent.setChild(key, this);\n    }\n\n    remove() {\n        const key = Object.keys(this.children)[0];\n\n        let child = this.children[key];\n        this.parent.children[this.parentKey] = child;\n        child.parent = this.parent;\n        child.parentKey = this.parentKey;\n        return key;\n    }\n\n    removeSubtree() {\n        delete this.parent.children[this.parentKey];\n    }\n\n    getFirstTaskIn() {\n        if (Object.keys(this.children).length > 0)\n            return this.children[Object.keys(this.children)[0]].getFirstTaskIn();\n        else\n            return null;\n    }\n\n    getAllContainedTasks() {\n        let tasks = [];\n        for (let child of Object.values(this.children)) {\n            tasks = tasks.concat(child.getAllContainedTasks());\n        }\n        return tasks;\n    }\n}\n\nclass RootNode extends Node {\n\n}\n\nclass PresetNode extends Node {\n    constructor(preset) {\n        super();\n        this.preset = preset;\n    }\n}\n\n\nclass CodeVersionNode extends Node {\n    constructor(preset) {\n        super();\n    }\n}\n\nclass TasksNode extends Node {\n    getFirstTaskIn() {\n        if (Object.keys(this.children).length > 0)\n            return this.children[\"0\"];\n        else\n            return null;\n    }\n\n    getAllContainedTasks() {\n        return Object.values(this.children);\n    }\n}\n\nclass View {\n    constructor(includeCodeVersion) {\n        this.root = new RootNode();\n        this.root.setChild(\"default\", new TasksNode());\n        this.taskByUuid = {};\n        this.tasks = {};\n        this.presets = [];\n        this.presetsByUuid = {};\n        this.includeCodeVersion = includeCodeVersion;\n    }\n\n    presetCompare(a, b) {\n        if (a.sorting !== b.sorting)\n            return a.sorting - b.sorting;\n        else\n            return a.uuid.localeCompare(b.uuid);\n    }\n\n    updatePresets(presets) {\n        for (let preset of presets) {\n            this.presetsByUuid[preset.uuid] = preset;\n        }\n\n        let sortedPresets = presets.slice().sort((a, b) => this.presetCompare(a, b));\n\n        for (let i = 0; i < this.presets.length; i++) {\n            if (sortedPresets.findIndex(x => x.uuid === this.presets[i].uuid) === - 1) {\n                this.removePreset(this.presets[i]);\n                i--;\n            }\n        }\n\n        for (let i = 0; i < sortedPresets.length; i++) {\n            if (i >= this.presets.length) {\n                this.addPreset(sortedPresets[i], i);\n                continue;\n            }\n\n            if (this.presets[i].uuid !== sortedPresets[i].uuid) {\n                if (this.presets.findIndex(x => x.uuid === sortedPresets[i].uuid) !== -1) {\n                    const preset = this.presets.find(x => x.uuid === sortedPresets[i].uuid);\n                    this.removePreset(preset);\n                }\n                this.addPreset(sortedPresets[i], i);\n\n                if (this.presets[i].uuid !== sortedPresets[i].uuid)\n                    throw new Error(\"Error with the presets in the view\");\n            } else {\n                this.presets[i] = sortedPresets[i];\n            }\n        }\n    }\n\n    addPreset(preset, insert_index) {\n        this.presets.splice(insert_index, 0, preset);\n        this.addNodeWithPreset(preset, this.root.children[\"default\"]);\n    }\n\n    addNodeWithPreset(preset, root) {\n        if ((root instanceof PresetNode && this.presetCompare(this.presetsByUuid[root.preset], preset) > 0) || root instanceof TasksNode) {\n            const firstTask = root.getFirstTaskIn();\n            if (firstTask !== null) {\n                const formerChoiceKey = this.getChoiceKeyToPreset(this.tasks[firstTask], preset);\n\n                const tasks = root.getAllContainedTasks();\n                let tasksWithDifferentChoice = [];\n                for (let task of tasks) {\n                    if (this.getChoiceKeyToPreset(this.tasks[task], preset) !== formerChoiceKey)\n                        tasksWithDifferentChoice.push(task);\n                }\n\n                if (tasksWithDifferentChoice.length > 0) {\n                    let newNode = new PresetNode(preset.uuid);\n                    this.addPresetBeforeNode(root, newNode, formerChoiceKey);\n\n                    for (let task of tasksWithDifferentChoice) {\n                        this.removeTask(this.tasks[task]);\n                        this.addTask(this.tasks[task]);\n                    }\n                }\n            }\n        } else {\n            for (let key in root.children)\n                this.addNodeWithPreset(preset, root.children[key]);\n        }\n    }\n\n    removePreset(preset) {\n        if (this.presets.includes(preset)) {\n            this.presets.splice(this.presets.indexOf(preset), 1);\n            this.removeNodesWithPreset(preset, this.root.children[\"default\"]);\n        }\n    }\n\n    removeNodesWithPreset(preset, root) {\n        if (root instanceof PresetNode && root.preset === preset.uuid) {\n            let tasks = [];\n            for (let key of Object.keys(root.children).slice(1)) {\n                tasks = tasks.concat(this.removeSubtree(root.children[key]))\n            }\n\n            root.remove();\n            for (let task of tasks)\n                this.addTask(this.tasks[task]);\n        } else if (!(root instanceof TasksNode)) {\n            for (let key in root.children)\n                this.removeNodesWithPreset(preset, root.children[key]);\n        }\n    }\n\n    removeSubtree(root) {\n        const tasks = root.getAllContainedTasks();\n        for (let task of tasks) {\n            delete this.taskByUuid[task.uuid];\n        }\n\n        root.removeSubtree();\n        return tasks;\n    }\n\n    updateTasks(tasks) {\n        this.tasks = tasks;\n    }\n\n    updateTask(task) {\n        this.tasks[task.uuid] = task;\n    }\n\n    addTasks(tasks) {\n        for (const task of tasks)\n            this.addTask(task);\n    }\n\n    addTask(task) {\n        this.tasks[task.uuid] = task;\n        let node = this.root.children[\"default\"];\n        let branching_options = [];\n        if (this.includeCodeVersion)\n            branching_options.push(\"code_version\");\n        branching_options = branching_options.concat(this.presets);\n\n        for (const branching_option of branching_options) {\n            let key, nodeExists, suitableChoice;\n            if (typeof branching_option === \"object\") {\n                if (branching_option.deprecated_choice === '')\n                    continue;\n\n                key = this.getChoiceKeyToPreset(task, branching_option);\n                nodeExists = node instanceof PresetNode && node.preset === branching_option.uuid;\n\n            } else if (branching_option === \"code_version\") {\n                key = task.version;\n                nodeExists = node instanceof CodeVersionNode\n            } else {\n                throw new Error(\"Invalid branching option\");\n            }\n\n            if (!nodeExists) {\n                const firstTask = node.getFirstTaskIn();\n                if (firstTask === null)\n                    continue;\n\n                let newNode, formerKey;\n                if (typeof branching_option === \"object\") {\n                    formerKey = this.getChoiceKeyToPreset(this.tasks[firstTask], branching_option);\n                    if (formerKey === key)\n                        continue;\n                    else {\n                        newNode = new PresetNode(branching_option.uuid);\n                    }\n                } else if (branching_option === \"code_version\") {\n                    if (this.tasks[firstTask].version === key)\n                        continue;\n                    else {\n                        newNode = new CodeVersionNode();\n                        formerKey = this.tasks[firstTask].version;\n                    }\n                } else {\n                    throw \"\";\n                }\n\n                node = this.addPresetBeforeNode(node, newNode, formerKey)\n            }\n\n            if (!(key in node.children)) {\n                node.setChild(key, new TasksNode())\n            }\n\n            node = node.children[key]\n        }\n\n        this.insertTask(node, task)\n    }\n\n    removeTask(task) {\n        let node = this.taskByUuid[task.uuid];\n        const key = parseInt(this.keyInDict(node.children, task.uuid));\n\n        delete node.children[key];\n        let i = key;\n        while (i + 1 in node.children) {\n            node.children[i] = node.children[i + 1];\n            delete node.children[i + 1];\n            i++;\n        }\n\n        delete this.taskByUuid[task.uuid];\n    }\n\n    keyInDict(dict, value) {\n        return Object.keys(dict).find(key => dict[key] === value);\n\n    }\n\n    checkNodeForRemoval(node) {\n        if (Object.keys(node.children).length === 0 && !(node.parent instanceof RootNode)) {\n            delete node.parent.children[node.parentKey];\n            this.checkNodeForRemoval(node.parent)\n        } else if (Object.keys(node.children).length === 1 && node.parent instanceof PresetNode) {\n            node.remove();\n        }\n    }\n\n    addPresetBeforeNode(node, newNode, formerKey) {\n        node.insertAsParent(formerKey, newNode);\n        return newNode;\n    }\n\n    getChoiceToPreset(task, preset) {\n        let suitableChoice = null;\n        let args = [];\n        for (const choice of task.choices) {\n            if (choice[0].preset === preset.uuid) {\n                suitableChoice = choice[0];\n                args = choice.slice(1);\n                break;\n            }\n        }\n\n        if (suitableChoice === null)\n            return [preset.deprecated_choice, args];\n        else\n            return [suitableChoice, args];\n    }\n\n    getChoiceKeyToPreset(task, preset) {\n        let choice = this.getChoiceToPreset(task, preset);\n        return this.getKeyToChoice(choice);\n    }\n\n    getKeyToChoice(choice) {\n        let key = choice[0].name;\n\n        for (let i = 0; i < choice[1].length; i++) {\n            key = key.replace(\"$T\" + (i) + \"$\", choice[1][i]);\n        }\n\n        return key\n    }\n\n    compTasks(firstTask, secondTask) {\n        return this.tasks[firstTask].creation_time < this.tasks[secondTask].creation_time;\n    }\n\n    insertTask(node, task) {\n        this.taskByUuid[task.uuid] = node;\n        const keys = Object.keys(node.children);\n\n        let targetKey = keys.length;\n        for (let i = 0; i < keys.length; i++) {\n            if (!this.compTasks(node.children[i], task.uuid)) {\n                targetKey = i;\n                break;\n            }\n        }\n\n        for (let i = keys.length - 1; i >= targetKey; i--) {\n            node.children[i + 1] = node.children[i];\n        }\n\n        node.children[targetKey] = task.uuid;\n    }\n\n    getNodeChoicePath(node, task) {\n        let choices = [];\n        while (!(node instanceof RootNode) && !(node.parent instanceof RootNode) && !(node instanceof CodeVersionNode) && !(node.parent instanceof CodeVersionNode)) {\n            choices.unshift([this.presetsByUuid[node.parent.preset], ...this.getChoiceToPreset(task, this.presetsByUuid[node.parent.preset])]);\n            node = node.parent;\n        }\n        return choices;\n    }\n\n    getSelectedTask(selectedChoices, codeVersion=null) {\n        let node = this.root.children[\"default\"];\n\n        if (node instanceof CodeVersionNode) {\n            if (!(codeVersion in node.children)) {\n                return [];\n            }\n            node = node.children[codeVersion]\n        }\n\n        for (const preset of this.presets) {\n            if (preset.deprecated_choice !== '') {\n                const suitableChoice = preset.choices.find((choice) => choice.uuid === selectedChoices[preset.uuid][0]);\n                const suitableKey = this.getKeyToChoice([suitableChoice, selectedChoices[preset.uuid].slice(1)]);\n\n                if (node instanceof TasksNode || node.preset !== preset.uuid) {\n                    const firstTask = node.getFirstTaskIn();\n                    if (firstTask === null)\n                        return [];\n\n                    const formerChoiceKey = this.getChoiceKeyToPreset(this.tasks[firstTask], preset);\n                    if (formerChoiceKey === suitableKey)\n                        continue;\n                    else\n                        return [];\n                }\n\n                if (!(suitableKey in node.children)) {\n                    return [];\n                }\n\n                node = node.children[suitableKey]\n            }\n        }\n\n        if (!(node instanceof TasksNode))\n            throw new Error(\"Error in selecting tasks\");\n\n        return Object.values(node.children);\n    }\n\n\n}\n\nexport default View;","import React from 'react';\n\nclass ReassuringPrompt extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dialogOpen: false\n        };\n\n        this.execute = this.execute.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n    }\n\n    execute() {\n        this.setState({\n            dialogOpen: false\n        });\n\n        fetch(this.props.url)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n\n    }\n\n    openDialog() {\n        this.setState({\n            dialogOpen: true\n        });\n    }\n\n    closeDialog() {\n        this.setState({\n            dialogOpen: false\n        });\n    }\n\n    render() {\n        if (this.state.dialogOpen) {\n            return (\n                <div className=\"prompt-wrapper\">\n                    <div className='prompt'>\n                        <div className=\"prompt-header\">{this.props.header}</div>\n                        <div className=\"prompt-text\">{this.props.text}</div>\n                        <div className=\"buttons\">\n                            <div onClick={this.execute}>Yes</div>\n                            <div onClick={this.closeDialog}>No</div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default ReassuringPrompt;","import React from 'react';\nimport ReassuringPrompt from \"./ReassuringPrompt\";\n\nclass Choice extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.reassuringRemovePromptRefs = React.createRef();\n    }\n\n    render() {\n        return (\n            <li className={this.props.choice.abstract ? \"item item-abstract item-choice\" : \"item item-choice\"}>\n                <div className=\"content\">\n                    <div className=\"title\">{this.props.choice.name}</div>\n                    <div className=\"footer\">\n                        {this.props.choice.base !== \"\" ? <span><span>Inherits from:</span> {this.props.choice.base}</span> : <span>-</span>}\n                        <span><span>Created:</span> {this.props.choice.creation_time.toShortStr()}</span>\n                    </div>\n                </div>\n                <div className=\"toolbar\">\n                    <div className=\"action\" onClick={() => this.props.editFunc(this.props.choice, true, this.props.preset, this.props.preset.choices)} title=\"Clone choice\">\n                        <i className=\"far fa-copy\"></i>\n                    </div>\n                    <div className=\"action\" onClick={() => this.props.editFunc(this.props.choice, false, this.props.preset, this.props.preset.choices)} title=\"Edit choice\">\n                        <i className=\"fa fa-edit\"></i>\n                    </div>\n                    <div className=\"dropdown\">\n                        <div className=\"action dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i className=\"fas fa-ellipsis-h\"></i>\n                        </div>\n                        <div className=\"dropdown-menu\">\n                            {this.props.removable ?\n                                <div className=\"action\" onClick={() => this.reassuringRemovePromptRefs.current.openDialog()} title=\"Remove choice\">\n                                    <i className=\"far fa-trash-alt\"></i>\n                                </div>\n                                :\n                                <div className=\"action action-disabled\" title=\"Choice cannot be removed, as there are tasks using it.\">\n                                    <i className=\"far fa-trash-alt\"></i>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <ReassuringPrompt ref={this.reassuringRemovePromptRefs} header=\"Really want to delete?\" text=\"Do you really want to remove this choice?\" url={\"/remove_choice/\" + this.props.choice.project_name + \"/\" + this.props.choice.uuid}/>\n            </li>\n        );\n    }\n}\n\nexport default Choice;","import React from 'react';\nimport Preset from \"./Preset\";\n\nclass PresetGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hideChoices: false\n        };\n\n        this.toggleHideChoices = this.toggleHideChoices.bind(this);\n    }\n\n    toggleHideChoices() {\n        this.setState({\n            hideChoices: !this.state.hideChoices\n        });\n    }\n\n  render() {\n        return (\n            <li className=\"item item-preset\">\n                {this.props.group !== \"\"  &&\n                    <div className=\"group-header\" onClick={() => this.toggleHideChoices()}>\n                        <div className=\"title\">{this.props.group}</div>\n                    </div>\n                }\n                {!this.state.hideChoices &&\n                    <ul>\n                        {this.props.presets.sort((a, b) => a.name.localeCompare(b.name)).map(preset => (\n                            <Preset\n                                key={preset.uuid}\n                                preset={preset}\n                                editPresetFunc={this.props.editPresetFunc}\n                                editChoiceFunc={this.props.editChoiceFunc}\n                                newChoiceFunc={this.props.newChoiceFunc}\n                                numberOfTasksPerChoice={this.props.numberOfTasksPerChoice}\n                            />\n                        ))}\n                </ul>\n                }\n            </li>\n        );\n    }\n}\n\nexport default PresetGroup;","import React from 'react';\nimport Choice from \"./Choice\";\nimport State from \"./Global\";\nimport PresetGroup from \"./PresetGroup\";\nimport ReassuringPrompt from \"./ReassuringPrompt\";\n\nclass Preset extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hideChoices: true\n        };\n\n        this.toggleHideChoices = this.toggleHideChoices.bind(this);\n        this.onDragStart = this.onDragStart.bind(this);\n        this.onDragOver = this.onDragOver.bind(this);\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.onDragLeave = this.onDragLeave.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.reassuringRemovePromptRefs = React.createRef();\n        this.presetRef = React.createRef();\n        this.dragEnterCounter = 0\n    }\n\n    toggleHideChoices() {\n        this.setState({\n            hideChoices: !this.state.hideChoices\n        });\n    }\n\n    onDragStart(e) {\n        e.dataTransfer.setData(\"text/plain\", this.props.preset.uuid);\n    }\n\n    onDragOver(e) {\n        if (this.props.sortMode && this.props.preset.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n        }\n    }\n\n    onDrop(e) {\n        if (this.props.sortMode && this.props.preset.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n            fetch(\"/reorder_preset/\" + this.props.project_name + \"/\" + e.dataTransfer.getData(\"text/plain\") + \"/\" + this.props.preset.sorting)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n\n            this.dragEnterCounter = 0;\n            this.presetRef.current.className = \"item item-preset\";\n        }\n    }\n\n    onDragEnter(e) {\n        if (this.props.sortMode && this.props.preset.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n            this.presetRef.current.className = \"item item-preset on-drag-over\";\n            this.dragEnterCounter++;\n        }\n    }\n\n    onDragLeave(e) {\n        if (this.props.sortMode && this.props.preset.uuid !== e.dataTransfer.getData(\"text/plain\")) {\n            e.preventDefault();\n            this.dragEnterCounter--;\n            if (this.dragEnterCounter === 0)\n                this.presetRef.current.className = \"item item-preset\";\n        }\n    }\n\n\n    render() {\n        return (\n            <li ref={this.presetRef} className=\"item item-preset\" onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDragEnter={this.onDragEnter} onDrop={this.onDrop} onDragStart={this.onDragStart} draggable={this.props.sortMode ? \"true\" : \"false\"}>\n                <div className=\"header\" onClick={() => this.toggleHideChoices()}>\n                    <div className=\"title\">{this.props.preset.name}</div>\n                    {!this.props.sortMode ?\n                        <div className=\"toolbar\">\n                            <div className=\"action\" onClick={(e) => {this.props.newChoiceFunc(this.props.preset, this.props.preset.choices); e.stopPropagation();}} title=\"New choice\">\n                                <i className=\"fas fa-plus\"></i>\n                            </div>\n                            <div className=\"action\" onClick={(e) => {this.props.editPresetFunc(this.props.preset); e.stopPropagation();}} title=\"Edit preset\">\n                                <i className=\"fa fa-edit\"></i>\n                            </div>\n                            {this.props.preset.choices.length === 0 ?\n                                <div className=\"action\" onClick={() => this.reassuringRemovePromptRefs.current.openDialog()} title=\"Remove preset\">\n                                    <i className=\"far fa-trash-alt\"></i>\n                                </div>\n                                :\n                                <div className=\"action action-disabled\" title=\"Preset cannot be removed, as it still has choices.\">\n                                    <i className=\"far fa-trash-alt\"></i>\n                                </div>\n                            }\n                        </div>\n                        :\n                        <div className=\"toolbar\">\n                            <div className=\"grip-icon\">\n                                <i className=\"fas fa-bars\"></i>\n                            </div>\n                        </div>\n                    }\n                </div>\n                {!this.state.hideChoices && !this.props.sortMode &&\n                    <ul>\n                        {this.props.preset.choices.sort((a, b) => {\n                            return a.name.localeCompare(b.name);\n                        }).map(choice => (\n                            <Choice\n                                key={choice.uuid}\n                                choice={choice}\n                                preset={this.props.preset}\n                                editFunc={this.props.editChoiceFunc}\n                                removable={!(choice.uuid in this.props.numberOfTasksPerChoice) || this.props.numberOfTasksPerChoice[choice.uuid].length === 0}\n                            />\n                        ))}\n                    </ul>\n                }\n                <ReassuringPrompt ref={this.reassuringRemovePromptRefs} header=\"Really want to delete?\" text=\"Do you really want to remove this preset?\" url={\"/remove_preset/\" + this.props.preset.project_name + \"/\" + this.props.preset.uuid}/>\n            </li>\n        );\n    }\n}\n\nexport default Preset;","import React from 'react';\nimport Prompt from \"./Prompt\";\nimport {TaskName} from \"./Task\";\nimport State from \"./Global\";\nimport ReassuringPrompt from \"./ReassuringPrompt\";\n\nclass PausedTask extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.reassuringRemovePromptRefs = React.createRef();\n        this.itemRef = React.createRef();\n        this.promptExtraRefs = React.createRef();\n        this.openExtraDialog = this.openExtraDialog.bind(this);\n        this.finish = this.finish.bind(this);\n        this.openLog = this.openLog.bind(this);\n        this.clone = this.clone.bind(this);\n        this.pause = this.pause.bind(this);\n    }\n\n    openExtraDialog() {\n        this.promptExtraRefs.current.openDialog();\n    }\n\n\n    finish() {\n        fetch(\"/finish/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    openLog() {\n        window.open(\"/log/\" + this.props.task.uuid, '_blank');\n    }\n\n    clone() {\n        fetch(\"/clone_task/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.highlight !== this.props.highlight && this.props.highlight) {\n            this.itemRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.highlight) {\n            this.itemRef.current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n        }\n    }\n\n    itemClass() {\n        let classname = \"item item-task \";\n        if (this.props.highlight)\n            classname += \"item-highlight \";\n        if (this.props.task.state === State.RUNNING)\n            classname += \"task-running \";\n        return classname;\n    }\n\n    pause() {\n        fetch(\"/pause/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    render() {\n        return (\n            <li ref={this.itemRef} className={this.itemClass()}>\n                <div className=\"content\">\n                    <div className=\"title\"><span className=\"try-number\">{this.props.task.try}</span><TaskName task={this.props.task}/></div>\n                    <div className=\"footer\">\n                        <span><span>Iterations:</span> {this.props.task.finished_iterations} / {this.props.task.total_iterations}</span>\n                        <span><span>Created:</span> {this.props.task.creation_time.toShortStr()}</span>\n                        <span><span>Last saved:</span> {this.props.task.saved_time.toShortStr()} {this.props.task.had_error == true && <span className=\"task-error\">(Error)</span>}</span>\n                    </div>\n                </div>\n                <div className=\"toolbar\">\n                    {\n                        this.props.task.state === State.RUNNING ?\n                        <div className=\"action\" onClick={this.pause} title=\"Pause task\">\n                            <i className=\"fa fa-pause\"></i>\n                        </div>\n                        :\n                        <div className=\"action\" onClick={this.openExtraDialog} title=\"Run for more iterations\">\n                            <i className=\"fa fa-play\"></i>\n                        </div>\n                    }\n                    <div className=\"action\" onClick={() => this.props.showTask(this.props.task)} title=\"Show detail information\">\n                        <i className=\"fa fa-info\"></i>\n                    </div>\n                    <div className=\"dropdown\">\n                        <div className=\"action dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\n                            <i className=\"fas fa-ellipsis-h\"></i>\n                        </div>\n                        <div className=\"dropdown-menu\">\n                            <div className=\"action\" onClick={() => this.props.rerunTask(this.props.task)} title=\"Run new task with the exact same config\">\n                                <i className=\"fa fa-redo\"></i>\n                            </div>\n                            {!this.props.task.is_test &&\n                                <div className=\"action\" onClick={() => this.props.filterLikeTask(this.props.task)} title=\"Filter for similar tasks\">\n                                    <i className=\"fas fa-sliders-h\"></i>\n                                </div>\n                            }\n                            <div className=\"action\" onClick={this.clone} title=\"Clone task\">\n                                <i className=\"far fa-copy\"></i>\n                            </div>\n                            <div className=\"action\" onClick={this.openLog} title=\"View log\">\n                                <i className=\"far fa-file-alt\"></i>\n                            </div>\n                            {this.props.task.state !== State.RUNNING &&\n                            <div className=\"action\" onClick={() => this.reassuringRemovePromptRefs.current.openDialog()} title=\"Remove task\">\n                                <i className=\"far fa-trash-alt\"></i>\n                            </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <Prompt ref={this.promptExtraRefs} devices={this.props.devices} defaultValue={this.props.task.total_iterations} header=\"Change total iterations?\" text=\"Specify the new number of iterations, you want the task to run:\" url={\"/continue/\" + this.props.task.uuid}/>\n                <ReassuringPrompt ref={this.reassuringRemovePromptRefs} header=\"Really want to delete?\" text=\"Do you really want to remove this task?\" url={\"/remove_task/\" + this.props.task.uuid}/>\n            </li>\n        );\n    }\n}\n\nexport default PausedTask;","import React from 'react';\nimport Prompt from \"./Prompt\";\n\nclass FinishedTask extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.promptExtraRefs = React.createRef();\n        this.openExtraDialog = this.openExtraDialog.bind(this);\n        this.openLog = this.openLog.bind(this);\n        this.clone = this.clone.bind(this);\n    }\n\n    openExtraDialog() {\n        this.promptExtraRefs.current.openDialog();\n    }\n\n    openLog() {\n        window.open(\"/log/\" + this.props.task.uuid, '_blank');\n    }\n\n     clone() {\n        fetch(\"/clone_task/\" + this.props.task.uuid)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    render() {\n        return (\n            <li className=\"item\">\n                <div className=\"content\">\n                    <div className=\"title\"><span className=\"try-number\">{this.props.task.try}</span>{this.props.task.name}</div>\n                    <div className=\"footer\">\n                        <span><span>Iterations:</span> {this.props.task.finished_iterations}</span>\n                        <span><span>Started:</span> {this.props.task.creation_time.toShortStr()}</span>\n                        <span><span>Finished:</span> {this.props.task.saved_time.toShortStr()} {this.props.task.had_error == true && <span className=\"task-error\">(Error)</span>}</span>\n                    </div>\n                </div>\n                <div className=\"toolbar\">\n                    <div className=\"action\" onClick={() => this.props.rerunTask(this.props.task)} title=\"Run new task with the exact same config\">\n                        <i className=\"fa fa-redo\"></i>\n                    </div>\n                    <div className=\"action\" onClick={this.openExtraDialog} title=\"Run for more iterations\">\n                        <i className=\"fa fa-plus\"></i>\n                    </div>\n                    <div className=\"dropdown\">\n                        <div className=\"action dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i className=\"fas fa-ellipsis-h\"></i>\n                        </div>\n                        <div className=\"dropdown-menu\">\n                            <div className=\"action\" onClick={this.openLog} title=\"View log\">\n                                <i className=\"far fa-file-alt\"></i>\n                            </div>\n                            <div className=\"action\" onClick={this.clone} title=\"Clone task\">\n                                <i className=\"far fa-copy\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Prompt ref={this.promptExtraRefs} defaultValue={this.props.task.total_iterations} header=\"Change total iterations?\" text=\"Specify the new number of iterations, you want the task to run:\" url={\"/continue/\" + this.props.task.uuid}/>\n            </li>\n        );\n    }\n}\n\nexport default FinishedTask;","import React from 'react';\n\nclass PresetEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            preset: null,\n            name: '',\n            deprecatedChoice: '',\n            defaultChoice: ''\n        };\n\n        this.configEditor = React.createRef();\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.save = this.save.bind(this);\n        this.new = this.new.bind(this);\n        this.onNameChange = this.onNameChange.bind(this);\n        this.onDeprecatedChoiceChange = this.onDeprecatedChoiceChange.bind(this);\n        this.onDefaultChoiceChange = this.onDefaultChoiceChange.bind(this);\n    }\n\n    open(preset) {\n        this.props.closeEditors();\n        this.setState({\n            preset: preset,\n            name: preset.name,\n            deprecatedChoice: preset.deprecated_choice.uuid,\n            defaultChoice: preset.default_choice.uuid\n        });\n    }\n\n    new(project_name) {\n        this.props.closeEditors();\n        this.setState({\n            preset: {name: 'New preset', project_name: project_name, choices: []},\n            name: '',\n            deprecatedChoice: '',\n            defaultChoice: ''\n        });\n    }\n\n    close() {\n        this.setState({\n            preset: null\n        });\n    }\n\n    save() {\n        var data = new FormData();\n\n        var dataJson = {};\n        dataJson['name'] = this.state.name;\n        dataJson['deprecated_choice'] = this.state.deprecatedChoice;\n        dataJson['default_choice'] = this.state.defaultChoice;\n        dataJson['config'] = {};\n\n        data.append(\"data\", JSON.stringify(dataJson));\n\n        var url = \"\";\n        if (this.state.preset.uuid)\n            url = \"/edit_preset/\" + this.state.preset.project_name + \"/\" + this.state.preset.uuid;\n        else\n            url = \"/add_preset/\" + this.state.preset.project_name;\n\n        fetch(url,\n            {\n                method: \"POST\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n\n        this.close();\n    }\n\n    onNameChange(event) {\n        this.setState({\n            name: event.target.value\n        });\n    }\n\n    onDeprecatedChoiceChange(event) {\n        this.setState({\n            deprecatedChoice: event.target.value\n        });\n    }\n\n    onDefaultChoiceChange(event) {\n        this.setState({\n            defaultChoice: event.target.value\n        });\n    }\n\n    render() {\n        if (this.state.preset !== null) {\n            return (\n                <div className=\"preset-editor editor\" >\n                    <div className=\"header\">{this.state.preset.name}</div>\n                    <div className=\"field\">\n                        <label>Name:</label>\n                        <input value={this.state.name} onChange={this.onNameChange} required=\"required\" />\n                    </div>\n                    {this.state.preset.choices.length > 0 &&\n                    <div className=\"field\">\n                        <label>Choice for deprecated tasks:</label>\n                        <select value={this.state.deprecatedChoice} onChange={this.onDeprecatedChoiceChange}>\n                            {this.state.preset.choices.map(choice => (\n                                <option value={choice.uuid}>{choice.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    }\n                    {this.state.preset.choices.length > 0 &&\n                    <div className=\"field\">\n                        <label>Default choice for new tasks:</label>\n                        <select value={this.state.defaultChoice} onChange={this.onDefaultChoiceChange}>\n                            {this.state.preset.choices.map(choice => (\n                                <option value={choice.uuid}>{choice.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    }\n                    <div className=\"buttons\">\n                        <div onClick={this.save}>Save</div>\n                        <div onClick={this.close}>Cancel</div>\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default PresetEditor;","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\n\nclass ChoiceEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            choice: null,\n            name: '',\n            base: '',\n            abstract: false,\n            dynamic: false,\n            forceDynamic: false,\n            possible_base_choices: [],\n            uuid_to_load: null,\n            preset: null\n        };\n\n        this.configEditor = React.createRef();\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.save = this.save.bind(this);\n        this.new = this.new.bind(this);\n        this.onNameChange = this.onNameChange.bind(this);\n        this.onBaseChange = this.onBaseChange.bind(this);\n        this.onAbstractChange = this.onAbstractChange.bind(this);\n        this.onDynamicChange = this.onDynamicChange.bind(this);\n        this.onIsBaseDynamic = this.onIsBaseDynamic.bind(this);\n        this.onTemplateChange = this.onTemplateChange.bind(this);\n    }\n\n    open(choice, duplicate, preset, possible_base_choices) {\n        this.props.closeEditors();\n        if (duplicate) {\n            this.setState({\n                choice: {name: choice.name, project_name: choice.project_name},\n                name: choice.name,\n                base: choice.base_uuid,\n                uuid_to_load: choice.uuid,\n                abstract: choice.abstract,\n                dynamic: choice.dynamic,\n                template: choice.isTemplate,\n                forceDynamic: false,\n                preset: preset,\n                possible_base_choices: possible_base_choices\n            });\n        } else {\n            this.setState({\n                choice: choice,\n                name: choice.name,\n                base: choice.base_uuid,\n                uuid_to_load: choice.uuid,\n                abstract: choice.abstract,\n                dynamic: choice.dynamic,\n                template: choice.isTemplate,\n                forceDynamic: false,\n                preset: preset,\n                possible_base_choices: possible_base_choices\n            });\n        }\n    }\n\n    new(preset, possible_base_choices) {\n        this.props.closeEditors();\n        this.setState({\n            choice: {name: 'New choice', project_name: preset.project_name},\n            name: '',\n            base: '',\n            abstract: false,\n            dynamic: false,\n            uuid_to_load: null,\n            forceDynamic: false,\n            preset: preset,\n            possible_base_choices: possible_base_choices\n        });\n    }\n\n    close() {\n        this.setState({\n            choice: null\n        });\n    }\n\n    save() {\n\n        var data = new FormData();\n\n        var dataJson = {};\n        if (this.state.name !== \"\")\n            dataJson['name'] = this.state.name;\n        if (this.state.base !== '')\n            dataJson['base'] = this.state.base;\n        if (this.state.abstract)\n            dataJson['abstract'] = this.state.abstract;\n        if (this.state.dynamic)\n            dataJson['dynamic'] = this.state.dynamic;\n        if (this.state.template)\n            dataJson['isTemplate'] = this.state.template;\n        dataJson['config'] = this.configEditor.current.state.config;\n\n        data.append(\"data\", JSON.stringify(dataJson));\n\n        var url = \"\";\n        if (this.state.choice.uuid)\n            url = \"/edit_choice/\" + this.state.preset.project_name  + \"/\" + this.state.preset.uuid + \"/\" + this.state.choice.uuid;\n        else\n            url = \"/add_choice/\" + this.state.preset.project_name + \"/\" + this.state.preset.uuid;\n\n        fetch(url,\n            {\n                method: \"POST\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n\n        this.close();\n    }\n\n    onNameChange(event) {\n        this.setState({\n            name: event.target.value\n        });\n    }\n\n    onBaseChange(event) {\n        this.setState({\n            base: event.target.value\n        });\n    }\n\n    onAbstractChange(event) {\n        this.setState({\n            abstract: event.target.checked\n        });\n    }\n\n    onDynamicChange(event) {\n        this.setState({\n            dynamic: event.target.checked\n        });\n    }\n\n    onIsBaseDynamic(isDynamic) {\n        if (isDynamic) {\n            this.setState({\n                dynamic: true,\n                forceDynamic: true\n            });\n        } else if (this.state.forceDynamic) {\n            this.setState({\n                dynamic: false,\n                forceDynamic: false\n            });\n        }\n    }\n\n    onTemplateChange(event) {\n        this.setState({\n            template: event.target.checked\n        });\n    }\n\n    render() {\n        if (this.state.choice !== null) {\n            return (\n                <div className=\"choice-editor editor\" >\n                    <div className=\"header\">{this.state.choice.name}</div>\n                    <div className=\"field\">\n                        <label>Name:</label>\n                        <input value={this.state.name} onChange={this.onNameChange}  required=\"required\" />\n                    </div>\n                    <div className=\"field\">\n                        <label>Base:</label>\n                        <select value={this.state.base} onChange={this.onBaseChange}>\n                            <option value=\"\">None</option>\n                            {this.state.possible_base_choices.filter(choice => choice.uuid !== this.state.uuid_to_load).map(choice => (\n                                <option value={choice.uuid}>{choice.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"field\">\n                        <label>Abstract:</label>\n                        <input checked={this.state.abstract} onChange={this.onAbstractChange} type=\"checkbox\" />\n                    </div>\n                    <div className=\"field\">\n                        <label>Dynamic:</label>\n                        <input checked={this.state.dynamic} onChange={this.onDynamicChange} type=\"checkbox\" disabled={this.state.forceDynamic} />\n                    </div>\n                    <div className=\"field\">\n                        <label>Template:</label>\n                        <input checked={this.state.template} onChange={this.onTemplateChange} type=\"checkbox\" />\n                    </div>\n                    <ConfigEditor ref={this.configEditor} onDynamicChange={this.onIsBaseDynamic} url={\"/config/choice/\" + this.state.choice.project_name + (this.state.uuid_to_load !== null ? \"/\" + this.state.uuid_to_load : \"\")} bases={[this.state.base]}/>\n                    <div className=\"buttons\">\n                        <div onClick={this.save}>Save</div>\n                        <div onClick={this.close}>Cancel</div>\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default ChoiceEditor;","import React from 'react';\nimport Option from \"./Option\";\n\nclass PresetFilter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.mapChoiceToChoices = this.mapChoiceToChoices.bind(this);\n        this.calcChoiceName = this.calcChoiceName.bind(this);\n    }\n\n    calcChoiceName(choice, args) {\n        let name = choice.name;\n        for (let i = 0; i < args.length; i++) {\n            name = name.replace(\"$T\" + i + \"$\", args[i]);\n        }\n        return name;\n    }\n\n    calcChoiceClasses(preset, choice) {\n        let classes = \"choice \";\n        if (preset.uuid in this.props.selectedChoices && this.props.selectedChoices[preset.uuid][0] === choice.uuid && (!(\"resolvedName\" in choice) || this.calcChoiceName(choice, this.props.selectedChoices[preset.uuid].slice(1)) === choice.resolvedName))\n            classes += \"choice-selected \";\n        if (preset.default_choice.uuid === choice.uuid)\n            classes += \"choice-default \";\n        return classes;\n    }\n\n    mapChoiceToChoices(choice) {\n        let choices = [];\n        if (!choice.isTemplate)\n            choices.push({\"uuid\": choice.uuid, \"name\": choice.name, \"resolvedName\": choice.name, \"numberOfTasks\": this.props.numberOfTasksPerChoice && choice.uuid in this.props.numberOfTasksPerChoice ? this.props.numberOfTasksPerChoice[choice.uuid].length : 0, \"args\": []});\n        else if (choice.uuid in this.props.numberOfTasksPerChoice) {\n            let numbersPerArg = {};\n            for (let task of this.props.numberOfTasksPerChoice[choice.uuid]) {\n                const name = this.calcChoiceName(choice, task.slice(1));\n                if (!(name in numbersPerArg))\n                    numbersPerArg[name] = [0, task.slice(1)];\n                numbersPerArg[name][0]++;\n            }\n\n            for (let name in numbersPerArg)\n                choices.push({\"uuid\": choice.uuid, \"name\": choice.name, \"resolvedName\": name, \"numberOfTasks\": numbersPerArg[name][0], \"args\": numbersPerArg[name][1]});\n        }\n        return choices;\n    }\n\n    render() {\n        return (\n            <div className=\"preset-filter\">\n                {Object.keys(this.props.presetsByGroup).sort((a, b) => a.localeCompare(b)).map((group) => (\n                    <div key={group} className=\"preset-group\">\n                        {group !== \"\" &&\n                        <div className=\"group-header\" onClick={() => this.toggleHideChoices()}>\n                            <div className=\"title\">{group}</div>\n                        </div>\n                        }\n                        <div className=\"presets\">\n                            {this.props.presetsByGroup[group].sort((a, b) => a.name.localeCompare(b.name)).map(preset => (\n                                <div key={preset.uuid} className=\"preset\">\n                                    <div className=\"preset-name\">\n                                        {preset.name}\n                                    </div>\n                                    <div className=\"choices-wrapper\">\n                                        <div className=\"choices\">\n                                            {preset.choices.sort((a, b) => {\n                                                return a.name.localeCompare(b.name);\n                                            }).map(choice =>\n                                                !choice.isTemplate || !this.props.useTemplateFields ?\n                                                this.mapChoiceToChoices(choice).map(choice => (\n                                                        <div key={choice.uuid} className={this.calcChoiceClasses(preset, choice)} onClick={() => this.props.onSelectionChange(preset, choice, choice.args)}>\n                                                            <React.Fragment>\n                                                                {choice.resolvedName}\n                                                                {this.props.numberOfTasksPerChoice &&\n                                                                <span className=\"task-numbers\">{choice.numberOfTasks}</span>\n                                                                }\n                                                            </React.Fragment>\n                                                        </div>\n                                                    )\n                                                ):(\n                                                 <div key={choice.uuid} className={this.calcChoiceClasses(preset, choice, )} onClick={() => this.props.onSelectionChange(preset, choice, this.props.selectedChoices[preset.uuid][1])}>\n                                                    <React.Fragment>\n                                                        {choice.name.split(\"$T0$\")[0]}\n                                                        <input value={preset.uuid in this.props.selectedChoices ? this.props.selectedChoices[preset.uuid][1] : \"\"} style={{\"width\": Math.max(10, (10 * (preset.uuid in this.props.selectedChoices && this.props.selectedChoices[preset.uuid][1] !== undefined ? this.props.selectedChoices[preset.uuid][1] : \"\").length)) + \"px\"}} onChange={(evt) => this.props.onSelectionChange(preset, choice, evt.target.value)}/>\n                                                        {choice.name.split(\"$T0$\")[1]}\n                                                    </React.Fragment>\n                                                </div>\n                                                )\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default PresetFilter;","import React from 'react';\n\nclass Option extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"field\">\n                <label>{this.props.preset.name}:</label>\n                <select value={this.props.selection} onChange={(e) => this.props.onSelectionChangeFunc(this.props.preset, e)}>\n                    {this.props.preset.choices.map(choice => (\n                        <option value={choice.uuid}>{choice.name}</option>\n                    ))}\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default Option;","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\nimport Preset from \"./Preset\";\nimport Option from \"./Option\";\nimport PresetFilter from \"./PresetFilter\";\nimport JsonEditor from \"./JsonEditor\";\nimport $ from \"jquery\";\n\nclass TaskEditor extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let selectedChoices = {};\n\n        for (const preset of props.presets) {\n            if (preset.choices.length > 0)\n                selectedChoices[preset.uuid] = [preset.choices[0].uuid];\n        }\n\n        this.state = {\n            selectedChoices: selectedChoices,\n            uuid_to_load: null,\n            total_iterations: \"\",\n            save_interval: \"0\",\n            checkpoint_interval: \"0\",\n            open: false,\n            command: \"\",\n            commandHint: \"\",\n            isTest: false,\n            device: null\n        };\n\n\n        this.configEditor = React.createRef();\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.run = this.run.bind(this);\n        this.new = this.new.bind(this);\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        this.onTotalIterationsChange = this.onTotalIterationsChange.bind(this);\n        this.onCheckpointIntervalChange = this.onCheckpointIntervalChange.bind(this);\n        this.onSaveIntervalChange = this.onSaveIntervalChange.bind(this);\n        this.copyCommand = this.copyCommand.bind(this);\n        this.onIsTestChange = this.onIsTestChange.bind(this);\n        this.onDeviceChange = this.onDeviceChange.bind(this);\n        this.wrapperRef = React.createRef();\n        this.commandInput = React.createRef();\n    }\n\n    open(task) {\n\n        let selectedChoices = Object.assign({}, this.state.selectedChoices);\n\n        for (const preset of this.props.presets) {\n            let suitableChoice = null;\n            let args = [];\n            for (const choice of task.choices) {\n                if (choice[0].preset === preset.uuid) {\n                    suitableChoice = choice[0];\n                    args = choice.slice(1);\n                    break;\n                }\n            }\n\n            if (suitableChoice === null)\n                selectedChoices[preset.uuid] = [preset.deprecated_choice.uuid, ...args];\n            else\n                selectedChoices[preset.uuid] = [suitableChoice.uuid, ...args];\n        }\n\n        this.setState({\n            selectedChoices: selectedChoices,\n            open: true,\n            isTest: task.is_test,\n            device: this.props.devices[0].uuid\n        });\n        this.updateCommand(selectedChoices);\n    }\n\n    new() {\n        let selectedChoices = Object.assign({}, this.state.selectedChoices);\n\n        for (const preset of this.props.presets) {\n            if (!(preset.uuid in selectedChoices))\n                selectedChoices[preset.uuid] = [preset.default_choice.uuid];\n        }\n\n        this.setState({\n            selectedChoices: selectedChoices,\n            open: true,\n            device: this.props.devices[0].uuid\n        });\n        this.updateCommand(selectedChoices);\n    }\n\n    close() {\n        this.setState({\n            choice: null,\n            open: false\n        });\n    }\n\n    run() {\n        var data = new FormData();\n\n        var dataJson = {};\n        dataJson['choices'] = this.state.selectedChoices;\n        dataJson['config'] = {\n            \"save_interval\": parseInt(this.state.save_interval),\n            \"checkpoint_interval\": parseInt(this.state.checkpoint_interval)\n        };\n        dataJson['device'] = this.state.device;\n\n        data.append(\"data\", JSON.stringify(dataJson));\n\n        var url = \"/\" + (this.state.isTest ? \"test\" : \"start\") + \"/\" + this.props.project_name + \"/\" + this.state.total_iterations;\n\n        fetch(url,\n            {\n                method: \"POST\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n\n        this.close();\n    }\n\n    onSelectionChange(preset, choice, arg=null) {\n        const selectedChoices = Object.assign({}, this.state.selectedChoices);\n\n        selectedChoices[preset.uuid] = [choice.uuid];\n        if (arg !== null)\n            selectedChoices[preset.uuid].push(arg);\n\n        this.setState({\n            selectedChoices: selectedChoices\n        });\n        this.updateCommand(selectedChoices);\n    }\n\n\n    onTotalIterationsChange(event) {\n        this.setState({\n            total_iterations: event.target.value\n        });\n        this.updateCommand(null, event.target.value);\n    }\n\n    onSaveIntervalChange(event) {\n        this.setState({\n            save_interval: event.target.value\n        });\n    }\n\n    onCheckpointIntervalChange(event) {\n        this.setState({\n            checkpoint_interval: event.target.value\n        });\n    }\n\n    updateCommand(selectedChoices = null, total_iterations = null) {\n        if (selectedChoices === null)\n            selectedChoices = this.state.selectedChoices;\n        if (total_iterations === null)\n            total_iterations = this.state.total_iterations;\n        let choices = \"\";\n\n        for (const preset of this.props.presets) {\n            if (preset.uuid in selectedChoices) {\n                choices += preset.uuid + \" \" + selectedChoices[preset.uuid][0];\n                for (let i = 1; i < selectedChoices[preset.uuid].length; i++)\n                    choices += \":\\\"\" + selectedChoices[preset.uuid][i] + \"\\\"\";\n                choices += \" \";\n            }\n        }\n\n        if (total_iterations !== \"\") {\n            this.setState({\n                command: \"taskplan \" + (this.state.isTest ? \"test \" : \"start \") + this.props.project_name + \" \" + total_iterations + \" \" + choices,\n                commandHint: \"Click to copy\"\n            });\n        } else {\n            this.setState({\n                command: \"\",\n                commandHint: \"Total iterations missing\"\n            });\n        }\n    }\n\n    componentDidMount() {\n        $(this.wrapperRef.current).find('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    componentDidUpdate() {\n        $(this.wrapperRef.current).find('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    copyCommand() {\n        this.commandInput.current.select();\n        document.execCommand(\"copy\");\n        this.setState({\n            commandHint: \"Copied!\"\n        }, () => $(this.commandInput.current).tooltip('show'));\n    }\n\n    onIsTestChange(event) {\n        this.setState({\n            isTest: event.target.checked\n        }, () => this.updateCommand());\n    }\n\n    onDeviceChange(event) {\n        this.setState({\n            device: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div ref={this.wrapperRef} style={{'display': (this.state.open ? 'block' : 'none')}}>\n                <div className=\"task-editor slide-editor editor\">\n                    <div className=\"header\">Start task<i className=\"fas fa-times\" onClick={this.close}></i></div>\n                    <div className=\"field\">\n                        <label>Total iterations:</label>\n                        <input value={this.state.total_iterations} onChange={this.onTotalIterationsChange} required=\"required\" />\n                    </div>\n                    <div className=\"field\">\n                        <label>Save interval:</label>\n                        <input value={this.state.save_interval} onChange={this.onSaveIntervalChange} required=\"required\" />\n                    </div>\n                    <div className=\"field\">\n                        <label>Checkpoint interval:</label>\n                        <input value={this.state.checkpoint_interval} onChange={this.onCheckpointIntervalChange} required=\"required\" />\n                    </div>\n                    <div className=\"field\">\n                        <label>Is test:</label>\n                        <input checked={this.state.isTest} onChange={this.onIsTestChange} type=\"checkbox\" />\n                    </div>\n                    <PresetFilter presetsByGroup={this.props.presetsByGroup} selectedChoices={this.state.selectedChoices} onSelectionChange={this.onSelectionChange} useTemplateFields={true}/>\n                    <ConfigEditor ref={this.configEditor} url={\"/config/task/\" + this.props.project_name} bases={Object.values(this.state.selectedChoices)} preview={true} />\n                    <div className=\"field\">\n                        <label>Device:</label>\n                        <select value={this.state.device} onChange={this.onDeviceChange}>\n                            {this.props.devices.map(device => (\n                                <option value={device.uuid}>{device.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"field\">\n                        <label>Command:</label>\n                        <input className=\"command\" ref={this.commandInput} onClick={this.copyCommand} data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title={this.state.commandHint} value={this.state.command} readOnly={true} />\n                    </div>\n                    <div className=\"buttons\">\n                        <div onClick={this.run}>Run</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TaskEditor;","\nimport React from 'react';\nimport PausedTask from \"./PausedTask\";\n\nclass PresetNode extends React.Component {\n    render() {\n        return (\n            <div>\n                <div>{this.props.presets[0].name}</div>\n                <ul>\n                    {Object.keys(this.props.tasksPerChoice).map(choiceUuid => (\n                        <li>\n                            <div>{this.props.presets[0].choices.find(choice => choice.uuid === choiceUuid).name}</div>\n                            <Node presets={this.props.presets.slice(1)} tasks={this.props.tasksPerChoice[choiceUuid]} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nclass TasksNode extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.tasks.map(task => (\n                    <PausedTask\n                        rerunTask={this.rerunTask}\n                        key={task.uuid}\n                        task={task}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nclass Node extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let presets = this.props.presets.slice(0);\n        let tasksPerChoice = {};\n        while (presets.length > 0) {\n            let preset = presets[0];\n            if (preset.deprecated_choice === \"\")\n                continue;\n\n            tasksPerChoice = {};\n            for (const task of this.props.tasks) {\n                let choice = task.choices.find(e => e.preset === preset.uuid);\n                if (choice === undefined)\n                    choice = preset.deprecated_choice.uuid;\n                else\n                    choice = choice.uuid;\n\n                if (!tasksPerChoice.hasOwnProperty(choice))\n                    tasksPerChoice[choice] = [];\n                tasksPerChoice[choice].push(task);\n            }\n            if (Object.keys(tasksPerChoice).length > 1)\n                break;\n            presets.shift();\n        }\n\n        if (presets.length > 0) {\n            return <PresetNode tasksPerChoice={tasksPerChoice} presets={presets} />\n        } else {\n            return <TasksNode tasks={this.props.tasks}/>\n        }\n    }\n}\n\n\nclass TaskView extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Node presets={this.props.presets} tasks={this.props.tasks} />\n        );\n    }\n}\n\n\nexport default TaskView;","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\n\nclass PresetBatchEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n\n        this.configEditor = React.createRef();\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.save = this.save.bind(this);\n    }\n\n    open() {\n        this.props.closeEditors();\n        this.setState({\n            open: true\n        });\n    }\n\n    close() {\n        this.setState({\n            open: false\n        });\n    }\n\n    save() {\n        var data = new FormData();\n\n        var dataJson = {};\n        dataJson['config'] = this.configEditor.current.state.config;\n\n        data.append(\"data\", JSON.stringify(dataJson));\n\n        var url = \"/add_preset_batch/\" + this.props.project_name;\n\n        fetch(url,\n            {\n                method: \"POST\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            );\n\n        this.close();\n    }\n\n\n    render() {\n        if (this.state.open) {\n            return (\n                <div className=\"preset-batch-editor editor\" >\n                    <div className=\"header\">Add multiple presets</div>\n                    <ConfigEditor ref={this.configEditor} url=\"\"/>\n                    <div className=\"buttons\">\n                        <div onClick={this.save}>Save</div>\n                        <div onClick={this.close}>Cancel</div>\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default PresetBatchEditor;","import React from 'react';\nimport Preset from \"./Preset\";\nimport State from \"./Global\";\nimport FinishedTask from \"./FinishedTask\";\nimport PausedTask from \"./PausedTask\";\nimport PresetEditor from \"./PresetEditor\";\nimport ChoiceEditor from \"./ChoiceEditor\";\nimport TaskEditor from \"./TaskEditor\";\nimport TaskView from \"./TaskView\";\nimport PresetFilter from \"./PresetFilter\";\nimport View from \"./View\";\nimport PresetBatchEditor from \"./PresetBatchEditor\";\nimport PresetGroup from \"./PresetGroup\";\n\nclass PresetTab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAbstract: true\n        };\n        this.toggleShowAbstract = this.toggleShowAbstract.bind(this);\n        this.addPreset = this.addPreset.bind(this);\n        this.addPresetBatch = this.addPresetBatch.bind(this);\n        this.closeEditors = this.closeEditors.bind(this);\n        this.presetEditor = React.createRef();\n        this.presetBatchEditor = React.createRef();\n        this.choiceEditor = React.createRef();\n    }\n\n    toggleShowAbstract() {\n        this.setState({\n          showAbstract: !this.state.showAbstract,\n        });\n    }\n\n    closeEditors() {\n        this.presetEditor.current.close();\n        this.presetBatchEditor.current.close();\n        this.choiceEditor.current.close();\n    }\n\n    addPreset() {\n        this.presetEditor.current.new(this.props.project.name);\n    }\n\n    addPresetBatch() {\n        this.presetBatchEditor.current.open();\n    }\n\n    addChoice(preset) {\n        this.choiceEditor.current.new(preset);\n    }\n\n    render() {\n        return (\n            <div className=\"tab\" style={{'display': (this.props.active ? 'flex' : 'none')}}>\n                <ul className=\"presets-tab\" >\n                    {this.props.presetSortingMode ?\n                        this.props.presets.sort((a, b) => a.sorting - b.sorting).map((preset) => (\n                            <Preset\n                                key={preset.uuid}\n                                preset={preset}\n                                sortMode={true}\n                                project_name={this.props.project.name}\n                                numberOfTasksPerChoice={this.props.numberOfTasksPerChoice}\n                            />\n                        ))\n                        :\n                        Object.keys(this.props.presetsByGroup).sort((a, b) => a.localeCompare(b)).map((group) => (\n                            <PresetGroup\n                                key={group}\n                                presets={this.props.presetsByGroup[group]}\n                                group={group}\n                                sorting={this.props.sorting[0]}\n                                sortingDescending={this.props.sortingDescending[0]}\n                                editPresetFunc={this.presetEditor.current.open}\n                                editChoiceFunc={this.choiceEditor.current.open}\n                                newChoiceFunc={this.choiceEditor.current.new}\n                                numberOfTasksPerChoice={this.props.numberOfTasksPerChoice}\n                            />\n                        ))\n                    }\n                </ul>\n                <PresetEditor ref={this.presetEditor} closeEditors={this.closeEditors} />\n                <ChoiceEditor ref={this.choiceEditor} closeEditors={this.closeEditors} />\n                <PresetBatchEditor ref={this.presetBatchEditor} closeEditors={this.closeEditors} project_name={this.props.project.name} />\n                <div className=\"tab-toolbar\">\n                    <label>\n                        <input type=\"checkbox\" defaultChecked={this.state.showAbstract} onChange={this.toggleShowAbstract} />\n                        <span>Show abstract presets</span>\n                    </label>\n                    <div className=\"buttons\">\n                        <div onClick={this.addPreset}>Add preset</div>\n                        <div onClick={this.addPresetBatch}>Add batch</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default PresetTab;\n","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\nimport {TaskName} from \"./Task\";\nimport State from \"./Global\";\n\nclass TaskViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            task: null,\n            selectedChoices: {},\n            notes: \"\"\n        };\n\n        this.configEditor = React.createRef();\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.updateTasks = this.updateTasks.bind(this);\n        this.extractCheckpoint = this.extractCheckpoint.bind(this);\n        this.notesTextarea = React.createRef();\n        this.updateNotes = this.updateNotes.bind(this);\n        this.timer = null;\n    }\n\n    componentDidMount() {\n        this.props.repository.onChange(\"tasks\", this.updateTasks);\n    }\n\n    componentWillUnmount() {\n        this.props.repository.removeOnChange(\"tasks\", this.updateTasks);\n    }\n\n\n    open(task) {\n        let selectedChoices = {};\n        for (const preset of this.props.presets) {\n            let suitableChoice = null;\n            let args = [];\n            for (const choice of task.choices) {\n                if (choice[0].preset === preset.uuid) {\n                    suitableChoice = choice[0];\n                    args = choice.slice(1);\n                    break;\n                }\n            }\n\n            if (suitableChoice === null)\n                selectedChoices[preset.uuid] = preset.deprecated_choice.name;\n            else {\n                selectedChoices[preset.uuid] = suitableChoice.name;\n                for (let i = 0; i < args.length; i++)\n                    selectedChoices[preset.uuid] = selectedChoices[preset.uuid].replace(\"$T\" + (i) + \"$\", args[i]);\n            }\n\n        }\n\n        this.setState({\n            task: task,\n            selectedChoices: selectedChoices,\n            notes: task.notes\n        });\n    }\n\n    updateTasks(tasks) {\n        if (this.state.task !== null) {\n            this.setState({\n                task: this.state.task.uuid in tasks ? tasks[this.state.task.uuid] : null\n            });\n        }\n    }\n\n    close() {\n        this.setState({\n            task: null\n        });\n    }\n\n    extractCheckpoint(i) {\n        fetch(\"/extract_checkpoint/\" + this.state.task.uuid + \"/\" + i)\n        .then(res => res.json())\n        .then(\n            (result) => {\n            },\n            (error) => {\n\n            }\n        );\n    }\n\n\n    updateNotes(evt) {\n        const newValue = evt.target.value;\n        const task_uuid = this.state.task.uuid;\n        if (this.timer !== null)\n            clearTimeout(this.timer);\n\n        this.timer = setTimeout(() => {\n            var data = new FormData();\n\n            var dataJson = {};\n            dataJson['notes'] = newValue;\n\n            data.append(\"data\", JSON.stringify(dataJson));\n\n            var url = \"set_task_notes/\" + task_uuid;\n\n            fetch(url,\n                {\n                    method: \"POST\",\n                    body: data\n                })\n                .then(res => res.json())\n                .then(\n                    (result) => {\n\n                    },\n                    (error) => {\n\n                    }\n                );\n        }, 1000);\n\n\n        this.setState({\n            notes: newValue\n        });\n    }\n\n    render() {\n        if (this.state.task !== null) {\n            return (\n                <div className=\"task-viewer slide-editor editor\" >\n                    <div className=\"header\">Task details<i class=\"fas fa-times\" onClick={this.close}></i></div>\n                    <div className=\"title\"><span className=\"try-number\">{this.state.task.try}</span><TaskName task={this.state.task}/></div>\n                    <div className=\"metadata\">\n                        <div><span>Status:</span> {this.state.task.state === State.RUNNING ? \"Running\" : (this.state.task.state === State.QUEUED ? \"Queued\": \"Stopped\")}</div>\n                        <div><span>Iterations:</span> {this.state.task.finished_iterations} / {this.state.task.total_iterations}</div>\n                        <div><span>Started:</span> {this.state.task.creation_time.toShortStr()}</div>\n                        <div><span>Paused:</span> {this.state.task.saved_time.toShortStr()} {this.state.task.had_error == true && <span className=\"task-error\">(Error)</span>}</div>\n                        <div><span>Project:</span> {this.state.task.project_name}</div>\n                        <div><span>Code version:</span> {this.props.codeVersions[this.state.task.version].name}</div>\n                    </div>\n                    <ConfigEditor ref={this.configEditor} url={\"/config/task_timestep/\" + this.state.task.uuid + \"/0\"} bases={[]} preview={true}/>\n                    <h2>Notes:</h2>\n                    <div className=\"notes\">\n                        <textarea ref={this.notesTextarea} value={this.state.notes} onChange={evt => this.updateNotes(evt)}/>\n                    </div>\n                    <h2>Presets</h2>\n                    <div className=\"presets\">\n                        {this.props.presets.sort((a, b) => {\n                            return a.name.localeCompare(b.name);\n                        }).map(preset => (\n                            <div><span>{preset.name}:</span>{this.state.selectedChoices[preset.uuid]}</div>\n                        ))}\n                    </div>\n                    <h2>Checkpoints</h2>\n                    <div className=\"checkpoints\">\n                        {this.state.task.checkpoints.length > 0 ?\n                                this.state.task.checkpoints.map((checkpoint, i) => (\n                                    <div>\n                                        <span className=\"iteration\">{checkpoint.finished_iterations}</span>\n                                        <span className=\"time\">{checkpoint.time.toShortStr()}</span>\n                                        <div className=\"action\" onClick={() => this.extractCheckpoint(i)} title=\"Add task based on checkpoint\">\n                                            <i className=\"fas fa-arrow-right\"></i>\n                                        </div>\n                                    </div>\n                                ))\n                            :\n                            <span>No checkpoints exist</span>\n                        }\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default TaskViewer;","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\nimport {TaskName} from \"./Task\";\nimport PresetFilter from \"./PresetFilter\";\n\nclass PresetViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false\n        };\n\n        this.configEditor = React.createRef();\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n    }\n\n    open() {\n        this.setState({\n            open: true\n        });\n    }\n\n    close() {\n        this.setState({\n            open: false\n        });\n    }\n\n    render() {\n        if (this.state.open) {\n            return (\n                <div className=\"preset-viewer slide-editor editor\" >\n                    <div className=\"header\">Preset filter<i className=\"fas fa-times\" onClick={this.close}></i></div>\n                    <label>\n                        <input type=\"checkbox\" checked={this.props.presetFilterEnabled} onChange={() => this.props.togglePresetFilter()} />\n                        <span>Enabled</span>\n                    </label>\n                    <PresetFilter presetsByGroup={this.props.presetsByGroup} numberOfTasksPerChoice={this.props.numberOfTasksPerChoice} selectedChoices={this.props.selectedChoices} onSelectionChange={this.props.onSelectionChange}/>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default PresetViewer;","import React from 'react';\nimport Preset from \"./Preset\";\nimport State from \"./Global\";\nimport FinishedTask from \"./FinishedTask\";\nimport PausedTask from \"./PausedTask\";\nimport PresetEditor from \"./PresetEditor\";\nimport ChoiceEditor from \"./ChoiceEditor\";\nimport TaskEditor from \"./TaskEditor\";\nimport TaskView from \"./TaskView\";\nimport PresetFilter from \"./PresetFilter\";\nimport TaskViewer from \"./TaskViewer\";\nimport View from \"./View\";\nimport PresetTab from \"./PresetTab\";\nimport PresetViewer from \"./PresetViewer\";\n\nclass TaskTab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n        this.newTask = this.newTask.bind(this);\n        this.rerunTask = this.rerunTask.bind(this);\n        this.closeEditors = this.closeEditors.bind(this);\n        this.taskEditor = React.createRef();\n    }\n\n    closeEditors() {\n        this.taskEditor.current.close();\n    }\n\n    newTask() {\n        this.taskEditor.current.new();\n    }\n\n    rerunTask(task) {\n        this.taskEditor.current.open(task);\n    }\n\n    render() {\n        return (\n            <div className=\"tab\" style={{'display': (this.props.active ? 'flex' : 'none')}}>\n                <ul className=\"tasks-tab\" >\n                    {this.props.selectedTasks.filter(uuid => uuid in this.props.tasks).map(uuid => this.props.tasks[uuid]).sort((a, b) => {\n                        let s;\n                        switch(this.props.sorting[1]) {\n                            case 0:\n                                s = a.saved_time - b.saved_time; break;\n                            case 1:\n                                s = a.preset_name.localeCompare(b.preset_name); break;\n                            case 2:\n                                s = a.creation_time - b.creation_time; break;\n                            case 3:\n                                s = a.finished_iterations - b.finished_iterations; break;\n                        }\n                        if (s === 0)\n                            s = a.try - b.try;\n                        if (this.props.sortingDescending[1])\n                            s *= -1;\n                        return s;\n                    }).map(task => (\n                        <PausedTask\n                            rerunTask={this.rerunTask}\n                            key={task.uuid}\n                            task={task}\n                            showTask={this.props.showTask}\n                            highlight={task.uuid === this.props.highlightedTask}\n                            filterLikeTask={this.props.filterLikeTask}\n                            devices={this.props.devices}\n                        />\n                    ))}\n                </ul>\n                <TaskEditor devices={this.props.devices} ref={this.taskEditor} presets={this.props.presets} presetsByGroup={this.props.presetsByGroup} project_name={this.props.project.name} />\n                <div className=\"tab-toolbar\">\n                    <label>\n                    </label>\n                    <div className=\"buttons\">\n                        <div onClick={this.newTask}>New task</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default TaskTab;\n","import React from 'react';\nimport View from \"./View\";\nimport PresetTab from \"./PresetTab\";\nimport TaskTab from \"./TaskTab\";\nimport PresetViewer from \"./PresetViewer\";\n\nclass Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            presets: [],\n            presetsByGroup: {},\n            tasks: [],\n            activeTab: 0,\n            sorting: [0, 0],\n            sortingDescending: [true, true],\n            selectedChoices: {},\n            selectedTasks: [],\n            presetFilterEnabled: false,\n            presetSortingMode: false,\n            numberOfTasksPerChoice: {}\n        };\n        this.updateTasks = this.updateTasks.bind(this);\n        this.updatePresets = this.updatePresets.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.removeTask = this.removeTask.bind(this);\n        this.toggleShowAbstract = this.toggleShowAbstract.bind(this);\n        this.showTab = this.showTab.bind(this);\n        this.onChangeSorting = this.onChangeSorting.bind(this);\n        this.switchSortingDirection = this.switchSortingDirection.bind(this);\n        this.openPresetViewer = this.openPresetViewer.bind(this);\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        this.togglePresetFilter = this.togglePresetFilter.bind(this);\n        this.togglePresetSortingMode = this.togglePresetSortingMode.bind(this);\n        this.filterLikeTask = this.filterLikeTask.bind(this);\n        this.filterView = new View(true);\n        this.presetViewerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.repository.onChange(\"tasks\", this.updateTasks);\n        this.props.repository.onChange(\"presets\", this.updatePresets);\n        this.props.repository.onAdd(\"tasks\", this.addTask);\n        this.props.repository.onRemove(\"tasks\", this.removeTask);\n        this.updatePresets(this.props.repository.presets);\n        for (let key in this.props.repository.tasks)\n            this.addTask(this.props.repository.tasks[key]);\n    }\n\n    componentWillUnmount() {\n        this.props.repository.removeOnChange(\"tasks\", this.updateTasks);\n        this.props.repository.removeOnChange(\"presets\", this.updatePresets);\n        this.props.repository.removeOnAdd(\"tasks\", this.addTask);\n        this.props.repository.removeOnRemove(\"tasks\", this.removeTask);\n    }\n\n    addTask(task) {\n        let numberOfTasksPerChoice = Object.assign({}, this.state.numberOfTasksPerChoice);\n        if (!task.is_test) {\n            if (task.project_name === this.props.project.name) {\n                this.filterView.addTask(task);\n            }\n\n            for (let choice of task.choices) {\n                if (!(choice[0].uuid in numberOfTasksPerChoice))\n                    numberOfTasksPerChoice[choice[0].uuid] = [];\n                numberOfTasksPerChoice[choice[0].uuid].push([task.uuid, choice.slice(1)]);\n            }\n        }\n\n        let tasks = Object.assign({}, this.state.tasks);\n        tasks[task.uuid] = task;\n\n        this.setState({\n            tasks: tasks,\n            numberOfTasksPerChoice: numberOfTasksPerChoice\n        });\n\n        this.updateVisibleTasks();\n    }\n\n    removeTask(task) {\n        if ( !task.is_test) {\n            let numberOfTasksPerChoice = Object.assign({}, this.state.numberOfTasksPerChoice);\n            for (let choice of task.choices) {\n                if (choice[0].uuid in numberOfTasksPerChoice) {\n                    let index = numberOfTasksPerChoice[choice[0].uuid].findIndex(x => x[0] === task.uuid);\n                    numberOfTasksPerChoice[choice[0].uuid].splice(index, 1);\n                }\n            }\n\n            this.setState({\n                numberOfTasksPerChoice: numberOfTasksPerChoice\n            });\n        }\n\n        if (task.project_name === this.props.project.name && !task.is_test) {\n            this.filterView.removeTask(task);\n        }\n        this.updateVisibleTasks();\n    }\n\n    updateVisibleTasks(selectedChoices=null, presetFilterEnabled=null) {\n        if (selectedChoices === null)\n            selectedChoices = this.state.selectedChoices;\n        if (presetFilterEnabled === null)\n            presetFilterEnabled = this.state.presetFilterEnabled;\n\n        let selectedTasks;\n        if (presetFilterEnabled) {\n            selectedTasks = this.filterView.getSelectedTask(selectedChoices, this.props.project.current_code_version);\n        } else {\n            selectedTasks = Object.keys(this.state.tasks).filter(task => this.state.tasks[task].version === this.props.project.current_code_version);\n        }\n        this.setState({\n            selectedTasks: selectedTasks\n        });\n    }\n\n    updatePresets(presets) {\n        this.filterView.updatePresets(Object.values(presets));\n\n        let selectedChoices = Object.assign({}, this.state.selectedChoices);\n\n        let presetsByGroup = {};\n        for (const preset of Object.values(presets)) {\n            if (!(preset.uuid in selectedChoices) && preset.choices.length > 0)\n                selectedChoices[preset.uuid] = [preset.choices[0].uuid];\n\n            const group = preset.group.length > 0 ? preset.group[0] : '';\n            if (!(group in presetsByGroup))\n                presetsByGroup[group] = [];\n            presetsByGroup[group].push(preset);\n        }\n\n        this.setState({\n            presets: Object.values(presets),\n            selectedChoices: selectedChoices,\n            presetsByGroup: presetsByGroup\n        });\n    }\n\n    updateTasks(tasks) {\n        for (let key in tasks) {\n            if (tasks[key].project_name === this.props.project.name)\n                this.filterView.updateTask(tasks[key]);\n        }\n\n        this.setState({\n            tasks: tasks\n        });\n    }\n\n    toggleShowAbstract() {\n        this.setState({\n          showAbstract: !this.state.showAbstract,\n        });\n    }\n\n    showTab(tab) {\n        this.setState({\n          activeTab: tab,\n        });\n    }\n\n    onChangeSorting(e) {\n        const sorting = this.state.sorting.slice();\n        sorting[this.state.activeTab] = parseInt(e.target.value);\n        this.setState({sorting: sorting});\n    }\n\n    switchSortingDirection() {\n        const sortingDescending = this.state.sortingDescending.slice();\n        sortingDescending[this.state.activeTab] = !sortingDescending[this.state.activeTab];\n        this.setState({sortingDescending: sortingDescending});\n    }\n\n    onSelectionChange(preset, choice, args) {\n        const selectedChoices = Object.assign({}, this.state.selectedChoices);\n\n        selectedChoices[preset.uuid] = [choice.uuid, ...args];\n\n        this.updateVisibleTasks(selectedChoices);\n        this.setState({\n            selectedChoices: selectedChoices\n        });\n    }\n\n\n    filterLikeTask(task) {\n        const selectedChoices = Object.assign({}, this.state.selectedChoices);\n\n        for (const preset of this.state.presets) {\n            let choice = this.filterView.getChoiceToPreset(task, preset);\n            selectedChoices[preset.uuid] = [choice[0].uuid, ...choice[1]];\n        }\n\n        this.setState({\n            selectedChoices: selectedChoices,\n            presetFilterEnabled: true\n        }, () => this.updateVisibleTasks());\n        this.openPresetViewer();\n    }\n\n    togglePresetFilter() {\n        let presetFilterEnabled = !this.state.presetFilterEnabled;\n        this.setState({\n            presetFilterEnabled: presetFilterEnabled\n        });\n        this.updateVisibleTasks(null, presetFilterEnabled);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.project.current_code_version !== this.props.project.current_code_version)\n            this.updateVisibleTasks();\n        if (prevProps.highlightedTask !== this.props.highlightedTask && this.props.highlightedTask !== null) {\n            this.setState({\n                presetFilterEnabled: false,\n                activeTab: 1\n            }, () => this.updateVisibleTasks());\n        }\n    }\n\n    openPresetViewer() {\n        this.props.closeViewer();\n        this.presetViewerRef.current.open();\n    }\n\n    togglePresetSortingMode() {\n        this.setState({\n            presetSortingMode: !this.state.presetSortingMode\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"project\" style={this.props.visible ? {} : {display: 'none'}}>\n                <div className=\"tabs\">\n                    <div className={this.state.activeTab === 0 ? \"tab-active\" : \"\"} onClick={() => this.showTab(0)}>Presets</div>\n                    <div className={this.state.activeTab === 1 ? \"tab-active\" : \"\"} onClick={() => this.showTab(1)}>Tasks</div>\n                </div>\n                <div className=\"sorting\">\n                        {this.state.activeTab === 0 &&\n                            <div>\n                                <span onClick={this.togglePresetSortingMode} className={\"fas fa-sort\"}></span>\n                            </div>\n                        }\n                        {this.state.activeTab === 1 &&\n                            <div>\n                                <label>Sorting:</label>\n                                <select value={this.state.sorting[1]} onChange={this.onChangeSorting}>\n                                    <option value=\"0\">Finished</option>\n                                    <option value=\"1\">Name</option>\n                                    <option value=\"2\">Created</option>\n                                    <option value=\"3\">Iterations</option>\n                                </select>\n                                <span onClick={this.switchSortingDirection} className={this.state.sortingDescending[this.state.activeTab] ? \"fa fa-sort-amount-down\" : \"fa fa-sort-amount-up\"}></span>\n\n                                <span className=\"fas fa-sliders-h\"onClick={this.openPresetViewer}></span>\n                            </div>\n                        }\n                </div>\n                <PresetTab\n                    active={this.state.activeTab === 0}\n                    presetsByGroup={this.state.presetsByGroup}\n                    sorting={this.state.sorting}\n                    project={this.props.project}\n                    sortingDescending={this.state.sortingDescending}\n                    presetSortingMode={this.state.presetSortingMode}\n                    presets={this.state.presets}\n                    numberOfTasksPerChoice={this.state.numberOfTasksPerChoice}\n                />\n                <TaskTab\n                    active={this.state.activeTab === 1}\n                    presets={this.state.presets}\n                    project={this.props.project}\n                    tasks={this.state.tasks}\n                    selectedTasks={this.state.selectedTasks}\n                    selectedChoices={this.state.selectedChoices}\n                    presetFilterEnabled={this.state.presetFilterEnabled}\n                    sorting={this.state.sorting}\n                    sortingDescending={this.state.sortingDescending}\n                    onSelectionChange={this.onSelectionChange}\n                    showTask={this.props.showTask}\n                    presetsByGroup={this.state.presetsByGroup}\n                    highlightedTask={this.props.highlightedTask}\n                    filterLikeTask={this.filterLikeTask}\n                    devices={this.props.devices}\n                />\n                <PresetViewer ref={this.presetViewerRef} numberOfTasksPerChoice={this.state.numberOfTasksPerChoice} presetsByGroup={this.state.presetsByGroup} selectedChoices={this.state.selectedChoices} onSelectionChange={this.onSelectionChange} togglePresetFilter={this.togglePresetFilter} presetFilterEnabled={this.state.presetFilterEnabled}/>\n            </div>\n        );\n    }\n}\n\n\nexport default Project;\n","import React from 'react';\nimport ConfigEditor from \"./ConfigEditor\";\nimport {TaskName} from \"./Task\";\n\nclass CodeVersionViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            choices: {},\n            newName: \"\"\n        };\n\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.onNewNameChange = this.onNewNameChange.bind(this);\n        this.addCodeVersion = this.addCodeVersion.bind(this);\n        this.selectCodeVersion = this.selectCodeVersion.bind(this);\n        this.selectCodeVersion = this.selectCodeVersion.bind(this);\n    }\n\n    open() {\n        this.setState({\n            open: true\n        });\n    }\n\n    close() {\n        this.setState({\n            open: false\n        });\n    }\n\n    onNewNameChange(event) {\n        this.setState({\n            newName: event.target.value\n        });\n    }\n\n    addCodeVersion() {\n        fetch(\"/add_code_version/\" + this.props.project_name + \"/\" + this.state.newName)\n        .then(res => res.json())\n        .then(\n            (result) => {\n\n            },\n            (error) => {\n\n            }\n        );\n\n\n        this.setState({\n            newName: \"\"\n        });\n    }\n\n    selectCodeVersion(code_version) {\n        fetch(\"/select_code_version/\" + this.props.project_name + \"/\" + code_version)\n        .then(res => res.json())\n        .then(\n            (result) => {\n\n            },\n            (error) => {\n\n            }\n        );\n    }\n\n    findCodeVersionInTree(tree, code_version_uuid) {\n        if (tree.uuid === code_version_uuid) {\n            return tree;\n        } else {\n            for (let child of tree.children) {\n                const found = this.findCodeVersionInTree(child, code_version_uuid);\n                if (found !== null)\n                    return found;\n            }\n        }\n        return null;\n    }\n\n    selectBranch(codeVersion, child_index) {\n        let choices = Object.assign({}, this.state.choices);\n\n        choices[codeVersion.uuid] = child_index;\n\n        this.setState({\n            choices: choices\n        })\n    }\n\n    render() {\n        if (this.state.open && this.props.codeVersionTree !== null) {\n            let selectedNode = this.findCodeVersionInTree(this.props.codeVersionTree, this.props.currentCodeVersion);\n            let choicesToSelected = {};\n            while (selectedNode.base !== null) {\n                if (selectedNode.base.children.length > 0)\n                    choicesToSelected[selectedNode.base.uuid] = selectedNode.base.children.findIndex(x => x === selectedNode);\n                selectedNode = selectedNode.base;\n            }\n\n            let codeVersions = [{\"version\": this.props.codeVersionTree,  \"child_index\": 0, \"total_children\": 1}];\n            let currentCodeVersion = this.props.codeVersionTree;\n            while (currentCodeVersion.children.length > 0) {\n                let index = 0;\n                if (currentCodeVersion.uuid in this.state.choices) {\n                    index = this.state.choices[currentCodeVersion.uuid];\n                } else if (currentCodeVersion.uuid in choicesToSelected) {\n                    index = choicesToSelected[currentCodeVersion.uuid];\n                }\n\n                codeVersions.push({\"version\": currentCodeVersion.children[index], \"child_index\": index, \"total_children\": currentCodeVersion.children.length});\n                currentCodeVersion = currentCodeVersion.children[index];\n            }\n\n            return (\n                <div className=\"code-version-viewer slide-editor editor\" >\n                    <div className=\"header\">Code versions<i class=\"fas fa-times\" onClick={this.close}></i></div>\n                    <div className=\"code-versions\">\n                        {codeVersions.map((entry, i) => (\n                            <div>\n                                <div className=\"code-version-row\">\n                                    {entry.child_index > 0 ?\n                                        <div className=\"code-version-branch-arrow\" onClick={() => this.selectBranch(entry.version.base, entry.child_index - 1)}>\n                                            <i className=\"fas fa-chevron-left\"></i>\n                                        </div>\n                                        :\n                                        <div className=\"code-version-branch-arrow\">\n                                        </div>\n                                    }\n                                    <div className={this.props.currentCodeVersion === entry.version.uuid ? \"code-version current-code-version\" : \"code-version\"} onClick={() => this.selectCodeVersion(entry.version.uuid)}>\n                                        <div className=\"name\">{entry.version.name}</div>\n                                        <div className=\"time\">{entry.version.time.toShortStr()}</div>\n                                    </div>\n                                    {entry.child_index < entry.total_children - 1 ?\n                                        <div className=\"code-version-branch-arrow\" onClick={() => this.selectBranch(entry.version.base, entry.child_index + 1)}>\n                                            <i className=\"fas fa-chevron-right\"></i>\n                                        </div>\n                                        :\n                                        <div className=\"code-version-branch-arrow\">\n                                        </div>\n                                    }\n                                </div>\n                                {i < codeVersions.length - 1 &&\n                                    <div className=\"arrow\">\n                                        <i className=\"fas fa-long-arrow-alt-down\"></i>\n                                    </div>\n                                }\n                            </div>\n                            )\n                        )}\n                    </div>\n                    <div style={{\"flex\": \"1 1 0\"}}></div>\n                    <div className=\"header\">Add code version</div>\n                    <div className=\"field\">\n                        <label>Name:</label>\n                        <input value={this.state.newName} onChange={this.onNewNameChange} />\n                    </div>\n                    <div className=\"buttons\">\n                        <div onClick={this.addCodeVersion}>Add</div>\n                    </div>\n                </div>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default CodeVersionViewer;","import React from 'react';\nimport Project from \"./Project\";\nimport Prompt from \"./Prompt\";\nimport CodeVersionViewer from \"./CodeVersionViewer\";\nimport TaskViewer from \"./TaskViewer\";\n\nclass ProjectManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: [],\n            codeVersionTrees: {},\n            currentProject: 0,\n            highlightedTask: null\n        };\n        this.gotoTB = this.gotoTB.bind(this);\n        this.addVersion = this.addVersion.bind(this);\n        this.updateProjects = this.updateProjects.bind(this);\n        this.addCodeVersions = this.addCodeVersions.bind(this);\n        this.openTaskViewer = this.openTaskViewer.bind(this);\n        this.openCodeVersionViewer = this.openCodeVersionViewer.bind(this);\n        this.closeViewer = this.closeViewer.bind(this);\n        this.promptRefs = React.createRef();\n        this.codeVersionViewerRef = React.createRef();\n        this.taskViewerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.repository.onChange(\"projects\", this.updateProjects);\n        this.props.repository.onAdd(\"codeVersions\", this.addCodeVersions);\n        this.updateProjects(this.props.repository.projects);\n        for (let codeVersion in this.props.repository.codeVersions)\n            this.addCodeVersions(this.props.repository.codeVersions[codeVersion]);\n    }\n\n    componentWillUnmount() {\n        this.props.repository.removeOnChange(\"projects\", this.updateProjects);\n        this.props.repository.removeOnAdd(\"codeVersions\", this.addCodeVersions);\n    }\n\n    updateProjects(projects) {\n        this.setState({\n            projects: Object.values(projects)\n        });\n    }\n\n    addCodeVersions(codeVersion) {\n        let newNode = {\n            \"uuid\": codeVersion.uuid,\n            \"name\": codeVersion.name,\n            \"base\": codeVersion.base,\n            \"time\": codeVersion.time,\n            \"children\": []\n        };\n        let codeVersionTrees = Object.assign({}, this.state.codeVersionTrees);\n        const projectName = codeVersion.project_name;\n        if (!(projectName in codeVersionTrees)) {\n            codeVersionTrees[projectName] = newNode;\n            this.setState({\n                codeVersionTrees: codeVersionTrees\n            });\n        } else {\n            this.insertCodeVersionNode(codeVersionTrees[projectName], newNode);\n            this.setState({\n                codeVersionTrees: codeVersionTrees\n            });\n        }\n    }\n\n    insertCodeVersionNode(root, newNode) {\n        if (root.uuid === newNode.base) {\n            root.children.push(newNode);\n            newNode.base = root;\n        } else {\n            for (let child of root.children) {\n                this.insertCodeVersionNode(child, newNode);\n            }\n        }\n    }\n\n    updateCodeVersionNode(root, newNode) {\n        if (root.uuid === newNode.uuid) {\n            root.name = newNode.name;\n            root.time = newNode.time;\n        } else {\n            for (let child of root.children) {\n                this.updateCodeVersionNode(child, newNode);\n            }\n        }\n    }\n\n    gotoTB() {\n        if (this.state.projects[this.state.currentProject].tensorboard_port === -1) {\n             fetch(\"/tensorboard/\" + this.state.projects[this.state.currentProject].name)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if (result !== -1) {\n                            window.open(\"//\" + window.location.hostname + \":\" + result, '_blank');\n                        }\n                    },\n                    (error) => {\n\n                    }\n                )\n        } else {\n            window.open(\"//\" + window.location.hostname + \":\" + this.state.projects[this.state.currentProject].tensorboard_port,'_blank');\n        }\n    }\n\n    changeProject(deltaIndex) {\n        var currentProject = this.state.currentProject;\n        currentProject += deltaIndex;\n        currentProject = Math.min(this.state.projects.length - 1, Math.max(0, currentProject));\n        this.setState({\n            currentProject: currentProject\n        });\n    }\n\n    addVersion() {\n        this.promptRefs.current.openDialog();\n    }\n\n    closeViewer() {\n        this.codeVersionViewerRef.current.close();\n        this.taskViewerRef.current.close();\n    }\n\n    openTaskViewer(task) {\n        this.closeViewer();\n        this.taskViewerRef.current.open(task);\n    }\n\n    openCodeVersionViewer() {\n        this.closeViewer();\n        this.codeVersionViewerRef.current.open();\n    }\n\n    highlightTask(task) {\n        let project_id = this.state.projects.findIndex(project => project.name === task.project_name);\n        if (project_id !== -1) {\n            this.setState({\n                currentProject: project_id,\n                highlightedTask: task.uuid\n            });\n            setTimeout(() => {\n                this.setState({\n                    highlightedTask: null\n                });\n            }, 1500);\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"project-manager\">\n                <div id=\"projects-toolbar\">\n                    {this.state.projects.length > 0 &&\n                        <div id=\"project-selector\">\n                            <span onClick={() => this.changeProject(-1)} className={this.state.currentProject > 0 ? 'active' : ''}>\n                                <i className=\"fas fa-caret-left\"></i>\n                            </span>\n                            <span>\n                                {this.state.projects[this.state.currentProject].name}\n                            </span>\n                            <span onClick={() => this.changeProject(1)} className={this.state.currentProject < this.state.projects.length - 1 ? 'active' : ''}>\n                                <i className=\"fas fa-caret-right\"></i>\n                            </span>\n                        </div>\n                    }\n                    {this.state.projects.length > 0 && this.state.projects[this.state.currentProject].current_code_version in this.props.repository.codeVersions &&\n                        <span id=\"project-toolbar\">\n                            <div id=\"code-version\" title=\"Add new code version\" onClick={this.openCodeVersionViewer}>{this.props.repository.codeVersions[this.state.projects[this.state.currentProject].current_code_version].name}</div>\n                            <div id=\"tb-link\" onClick={this.gotoTB} title=\"Start and open tensorboard\">TB</div>\n                        </span>\n                    }\n                </div>\n                <div id=\"projects\">\n                    {this.state.projects.map((project, index) => (\n                        <Project\n                            key={project.name}\n                            project={project}\n                            repository={this.props.repository}\n                            visible={index === this.state.currentProject}\n                            showTask={this.openTaskViewer}\n                            closeViewer={this.closeViewer}\n                            highlightedTask={index === this.state.currentProject ? this.state.highlightedTask : null}\n                            devices={this.props.devices}\n                        />\n                    ))}\n                </div>\n                {this.state.projects.length > 0 && this.state.projects[this.state.currentProject].name in this.state.codeVersionTrees &&\n                    <CodeVersionViewer\n                        ref={this.codeVersionViewerRef}\n                        codeVersionTree={this.state.codeVersionTrees[this.state.projects[this.state.currentProject].name]}\n                        currentCodeVersion={this.state.projects[this.state.currentProject].current_code_version}\n                        project_name={this.state.projects[this.state.currentProject].name}\n                    />\n                }\n                <TaskViewer ref={this.taskViewerRef} repository={this.props.repository} presets={Object.values(this.props.repository.presets)} codeVersions={this.props.repository.codeVersions} />\n            </div>\n        );\n    }\n}\n\n\nexport default ProjectManager;","import React from 'react';\n\n\nclass FlashMessage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            state: (\"state\" in props ? props.state : 0)\n        };\n    }\n\n    render() {\n        let style = {};\n        if (this.state.state === 0)\n            style = {marginLeft: -400};\n        else if (this.state.state === 1)\n            style = {marginLeft: 0};\n        else if (this.state.state === 2)\n            style = {marginLeft: 0, marginTop: -26};\n        return (\n            <div className={'flash-message level-' + this.props.flashMessage.level} style={style} title={this.props.flashMessage.message}>\n                {this.props.flashMessage.short}\n            </div>\n        );\n    }\n}\n\nclass FlashMessageManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            flashMessages: []\n        };\n        this.flashMessagesRefs = [];\n        this.nextId = 0;\n\n        var fm = this;\n        this.props.evtSource.addEventListener(\"FLASH_MESSAGE\", function (e) {\n            const flashMessages = fm.state.flashMessages.slice();\n            const newFlashMessage = JSON.parse(e.data);\n\n            newFlashMessage.id = fm.nextId++;\n\n            flashMessages.push(newFlashMessage);\n            fm.flashMessagesRefs.push(React.createRef());\n            let flashMessageRef = fm.flashMessagesRefs[fm.flashMessagesRefs.length - 1];\n            setTimeout(() => fm.nextState(flashMessageRef), 100);\n\n            fm.setState({\n                flashMessages: flashMessages\n            });\n        });\n\n    }\n\n\n    nextState(flashMessage) {\n        if (flashMessage.current.state.state === 0) {\n            flashMessage.current.setState({state: 1});\n            setTimeout(() => this.nextState(flashMessage), 10000);\n        } else if (flashMessage.current.state.state === 1) {\n            flashMessage.current.setState({state: 2});\n            setTimeout(() => this.nextState(flashMessage), 1000);\n        } else if (flashMessage.current.state.state === 2) {\n            const flashMessages = this.state.flashMessages.slice();\n            const messageIndex = this.flashMessagesRefs.findIndex(function (e) {\n                return e === flashMessage\n            });\n\n            flashMessages.splice(messageIndex, 1);\n            this.flashMessagesRefs.splice(messageIndex, 1);\n\n            this.setState({\n                flashMessages: flashMessages\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"flash-messages\">\n                {this.state.flashMessages.map((flashMessage, index) => (\n                    <FlashMessage\n                        key={flashMessage.id}\n                        flashMessage={flashMessage}\n                        ref={this.flashMessagesRefs[index]}\n                    />\n                ))}\n                {this.props.noConnection &&\n                    <FlashMessage\n                        key=\"-1\"\n                        flashMessage={{\"short\": \"No connection to server\", \"level\": \"40\"}}\n                        state=\"1\"\n                    />\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default FlashMessageManager;","import React from 'react';\nimport Prompt from \"./Prompt\";\n\nclass ControlBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.openGlobalLog = this.openGlobalLog.bind(this);\n        this.pauseAll = this.pauseAll.bind(this);\n    }\n\n    openGlobalLog() {\n        window.open(\"/log\", '_blank');\n    }\n\n    pauseAll() {\n        fetch(\"/pause_all/\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                },\n                (error) => {\n\n                }\n            )\n    }\n\n    render() {\n        return (\n            <div id=\"controlbar\">\n                <div className=\"container\">\n                    <h1 id=\"title\">\n                        TaskPlan\n                    </h1>\n                    <div className=\"action\" onClick={this.pauseAll} title=\"Pause all running tasks\">\n                        <i className=\"fa fa-pause\"></i>\n                    </div>\n                    <div className=\"action\" onClick={this.openGlobalLog} title=\"Open the global log\">\n                        <i className=\"far fa-file-alt\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ControlBar;","import State from \"./Global\";\nimport Scheduler from \"./Scheduler\";\nimport View from \"./View\";\n\nclass Repository {\n    constructor(evtSource) {\n        this.evtSource = evtSource;       \n        this.presets = {};\n        this.projects = {};\n        this.choices = {};\n        this.tasks = {};\n        this.codeVersions = {};\n        this.onChangeListeners = {\n            \"presets\": [],\n            \"projects\": [],\n            \"choices\": [],\n            \"tasks\": [],\n            \"codeVersions\": []\n        };\n        this.onAddListeners = {\n            \"presets\": [],\n            \"projects\": [],\n            \"choices\": [],\n            \"tasks\": [],\n            \"codeVersions\": []\n        };\n        this.onRemoveListeners = {\n            \"presets\": [],\n            \"projects\": [],\n            \"choices\": [],\n            \"tasks\": [],\n            \"codeVersions\": []\n        };\n        \n        this.evtSource.addEventListener(\"PROJECT_CHANGED\", (e) => {\n            const changedProject = JSON.parse(e.data);\n            this.updateEntity(this.projects, changedProject, \"projects\", \"name\");\n        });\n\n        this.evtSource.addEventListener(\"CODE_VERSION_CHANGED\", (e) => {\n            const changedCodeVersion = JSON.parse(e.data);\n            changedCodeVersion.time = new Date(changedCodeVersion.time * 1000);\n            this.updateEntity(this.codeVersions, changedCodeVersion, \"codeVersions\");\n        });\n\n        this.evtSource.addEventListener(\"PRESET_CHANGED\", (e) => {\n            const changedPreset = JSON.parse(e.data);\n\n            if (changedPreset.uuid in this.presets) {\n                changedPreset.choices = this.presets[changedPreset.uuid].choices;\n            } else {\n                changedPreset.choices = [];\n            }\n            if (changedPreset.deprecated_choice in this.choices)\n                changedPreset.deprecated_choice = this.choices[changedPreset.deprecated_choice];\n            if (changedPreset.default_choice in this.choices)\n                changedPreset.default_choice = this.choices[changedPreset.default_choice];\n\n            this.updateEntity(this.presets, changedPreset, \"presets\");\n        });\n\n        this.evtSource.addEventListener(\"CHOICE_CHANGED\", (e) => {\n            const changedChoice = JSON.parse(e.data);\n\n            changedChoice.creation_time = new Date(changedChoice.creation_time * 1000);\n\n            this.updateEntity(this.choices, changedChoice, \"choices\");\n\n            let preset = this.presets[changedChoice.preset];\n            const previousIndex = preset.choices.findIndex(function (e) {\n                return e.uuid === changedChoice.uuid\n            });\n\n            if (previousIndex >= 0) {\n                preset.choices[previousIndex] = changedChoice;\n            } else {\n                preset.choices.push(changedChoice);\n            }\n            this.updateEntity(this.presets, preset, \"presets\");\n\n            preset = Object.values(this.presets).find((preset) => preset.deprecated_choice === changedChoice.uuid);\n            if (preset !== undefined) {\n                preset.deprecated_choice = changedChoice;\n                this.updateEntity(this.presets, preset, \"presets\");\n            }\n            preset = Object.values(this.presets).find((preset) => preset.default_choice === changedChoice.uuid);\n            if (preset !== undefined) {\n                preset.default_choice = changedChoice;\n                this.updateEntity(this.presets, preset, \"presets\");\n            }\n        });\n\n        this.evtSource.addEventListener(\"TASK_CHANGED\", (e) => {\n            const changedTask = JSON.parse(e.data);\n\n            changedTask.creation_time = new Date(changedTask.creation_time * 1000);\n            changedTask.saved_time = new Date(changedTask.saved_time * 1000);\n            changedTask.choices = changedTask.choices.map(e => [this.choices[e[0]]].concat(e.slice(1)));\n            for (let checkpoint of changedTask.checkpoints) {\n                checkpoint.time = new Date(checkpoint.time * 1000);\n            }\n\n            if (changedTask.state === State.RUNNING) {\n                if (changedTask.uuid in this.tasks) {\n                    if (changedTask.finished_iterations !== this.tasks[changedTask.uuid].finished_iterations) {\n                        changedTask.mean_iteration_time = (changedTask.iteration_update_time - (this.tasks[changedTask.uuid].iteration_update_time === 0 ? changedTask.start_time : this.tasks[changedTask.uuid].iteration_update_time)) / (changedTask.finished_iterations - this.tasks[changedTask.uuid].finished_iterations);\n                        changedTask.total_time = parseInt(changedTask.iteration_update_time - changedTask.start_time + changedTask.mean_iteration_time * (changedTask.total_iterations - changedTask.finished_iterations));\n                    } else {\n                        changedTask.mean_iteration_time = this.tasks[changedTask.uuid].mean_iteration_time;\n                        changedTask.total_time = this.tasks[changedTask.uuid].total_time;\n                    }\n                }\n                changedTask.start_time_timestamp = changedTask.start_time;\n                changedTask.start_time = new Date(changedTask.start_time * 1000);\n                Scheduler.refreshRunTime(changedTask);\n            }\n\n            if (changedTask.uuid in this.tasks) {\n                changedTask.name = this.tasks[changedTask.uuid].name;\n                changedTask.try = this.tasks[changedTask.uuid].try;\n                changedTask.nameChoices = this.tasks[changedTask.uuid].nameChoices;\n            }\n\n            this.updateEntity(this.tasks, changedTask, \"tasks\");\n        });\n\n        this.evtSource.addEventListener(\"TASK_REMOVED\", (e) => {\n            const changedTask = JSON.parse(e.data);\n            this.removeEntity(this.tasks, changedTask, \"tasks\")\n        });\n\n        this.evtSource.addEventListener(\"CHOICE_REMOVED\", (e) => {\n            const changedChoice = JSON.parse(e.data);\n            this.removeEntity(this.choices, changedChoice, \"choices\");\n\n            let preset = this.presets[changedChoice.preset];\n            const previousIndex = preset.choices.findIndex(function (e) {\n                return e.uuid === changedChoice.uuid\n            });\n\n            if (previousIndex >= 0) {\n                preset.choices.splice(previousIndex, 1);\n                this.updateEntity(this.presets, preset, \"presets\");\n            }\n        });\n\n        this.evtSource.addEventListener(\"PRESET_REMOVED\", (e) => {\n            const changedPreset = JSON.parse(e.data);\n            this.removeEntity(this.presets, changedPreset, \"presets\")\n        });\n\n        this.standardView = new View(true);\n\n        let updateTaskNames = () => {\n            for (const key of Object.keys(this.tasks)) {\n                if (!this.tasks[key].is_test) {\n                    let node = this.standardView.taskByUuid[key];\n                    this.tasks[key].nameChoices = this.standardView.getNodeChoicePath(node, this.tasks[key]);\n                    this.tasks[key].try = this.standardView.keyInDict(node.children, key);\n                } else {\n                    this.tasks[key].nameChoices = [];\n                    this.tasks[key].try = 0\n                }\n            }\n        };\n\n        this.onAdd(\"tasks\", (task) => {\n            if (!task.is_test)\n                this.standardView.addTask(task);\n\n            updateTaskNames();\n        });\n        this.onRemove(\"tasks\", (task) => {\n            this.standardView.removeTask(task);\n\n            updateTaskNames();\n        });\n        this.onChange(\"presets\", (presets) => {\n            this.standardView.updatePresets(Object.values(presets));\n\n            updateTaskNames();\n        });\n        this.onChange(\"tasks\", (tasks) => {\n            this.standardView.updateTasks(tasks);\n        });\n    }\n\n    updateEntity(entities, newEntity, entityType, key=\"uuid\") {\n        const isNew = !(newEntity[key] in entities);\n        entities[newEntity[key]] = newEntity;\n\n        if (isNew)\n            this.throwOnAddEvent(newEntity, entityType);\n        this.throwOnChangeEvent(entities, entityType);\n    }\n\n    removeEntity(entities, entityToRemove, entityType, key=\"uuid\") {\n        let entity = entities[entityToRemove[key]];\n        delete entities[entityToRemove[key]];\n\n        this.throwOnRemoveEvent(entity, entityType);\n        this.throwOnChangeEvent(entities, entityType);\n    }\n\n    throwOnChangeEvent(entities, entityType) {\n        let entitiesClone = Object.assign({}, entities);\n        for (let listener of this.onChangeListeners[entityType]) {\n            listener(entitiesClone);\n        }\n    }\n\n    throwOnAddEvent(entity, entityType) {\n        for (let listener of this.onAddListeners[entityType]) {\n            listener(entity);\n        }\n    }\n\n    throwOnRemoveEvent(entity, entityType) {\n        for (let listener of this.onRemoveListeners[entityType]) {\n            listener(entity);\n        }\n    }\n\n    onChange(entityType, listener) {\n        this.onChangeListeners[entityType].push(listener);\n    }\n\n    removeOnChange(entityType, listener) {\n        const listenerIndex = this.onChangeListeners[entityType].findIndex(listener);\n        if (listenerIndex >= 0)\n            this.onChangeListeners[entityType].splice(listenerIndex, 1);\n    }\n\n    onAdd(entityType, listener) {\n        this.onAddListeners[entityType].push(listener);\n    }\n\n    removeOnAdd(entityType, listener) {\n        const listenerIndex = this.onAddListeners[entityType].findIndex(listener);\n        if (listenerIndex >= 0)\n            this.onAddListeners[entityType].splice(listenerIndex, 1);\n    }\n\n    onRemove(entityType, listener) {\n        this.onRemoveListeners[entityType].push(listener);\n    }\n\n    removeOnRemove(entityType, listener) {\n        const listenerIndex = this.onRemoveListeners[entityType].findIndex(listener);\n        if (listenerIndex >= 0)\n            this.onRemoveListeners[entityType].splice(listenerIndex, 1);\n    }\n\n}\n\nexport default Repository;","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\n\nimport React from 'react';\nimport Scheduler from './Scheduler'\nimport ProjectManager from \"./ProjectManager\";\nimport FlashMessageManager from \"./FlashMessageManager\"\nimport ControlBar from \"./ControlBar\";\nimport ReconnectingEventSource from \"reconnecting-eventsource\";\nimport Repository from \"./Repository\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            noConnection: true,\n            devices: []\n        };\n\n        this.evtSource = new ReconnectingEventSource(\"/update\", {});\n        this.repository = new Repository(this.evtSource);\n        this.projectManagerRef = React.createRef();\n\n        this.refreshConnectionState = this.refreshConnectionState.bind(this);\n\n        this.evtSource.onerror = this.refreshConnectionState;\n        this.evtSource.onopen = this.refreshConnectionState;\n\n        this.state.noConnection = (this.evtSource.readyState === 0);\n\n        this.evtSource.addEventListener(\"SCHEDULER_OPTIONS\", (e) => {\n            const options = JSON.parse(e.data);\n            this.setState({\n                devices: options.devices\n            });\n        });\n    }\n\n    refreshConnectionState() {        this.setState({\n            noConnection: this.evtSource.readyState === 0\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"page\">\n                <FlashMessageManager evtSource={this.evtSource} noConnection={this.state.noConnection}/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            <Scheduler devices={this.state.devices} evtSource={this.evtSource} repository={this.repository} highlightTask={(task) => this.projectManagerRef.current.highlightTask(task)}/>\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <ProjectManager devices={this.state.devices} ref={this.projectManagerRef} repository={this.repository}/>\n                        </div>\n                    </div>\n                </div>\n                <ControlBar evtSource={this.evtSource}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nrequire('./less/index.less');\nrequire('./fonts/fonts.css');\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}